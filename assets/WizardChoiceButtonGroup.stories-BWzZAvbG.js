import{j as i}from"./jsx-runtime-D_zvdyIk.js";import{W as m,a as t}from"./WizardChoiceButton-aV8y2X5I.js";import{I as l}from"./LayersTwoTone-D0myDhRn.js";import{F as d}from"./IconSvg-CgkvdIjM.js";import"./Box-CDBIpvwF.js";import"./createTheme-DcsDOw1A.js";import"./index-CkFnR4ru.js";import"./iframe-CKvnnJhq.js";import"./useTheme-VJ2j0frp.js";import"./extendSxProp-B2jDyka1.js";import"./spreadSx-CwcO6WA9.js";import"./Typography-DUXOvTJX.js";import"./index-BDhwziWJ.js";import"./DefaultPropsProvider-CGqxt6ob.js";import"./createSimplePaletteValueFilter-B9aGn8G9.js";import"./createSvgIcon-364Lzn_b.js";import"./useTheme-bpf5HOw7.js";import"./Tooltip-DC2q4Wz4.js";import"./index-CHLvizmL.js";import"./useSlot-Bju1dyXB.js";import"./useForkRef-BJQkitpf.js";import"./useTimeout-BqUVErKz.js";import"./useControlled-BvqV3f_O.js";import"./getReactElementRef-JptPm9gh.js";import"./index-BqxOl3YS.js";import"./index-BPjGFZ8d.js";import"./Grow-DqmkwxJ5.js";import"./Popper-cjOWIAbd.js";import"./ownerDocument-DW-IO8s5.js";import"./isFocusVisible-B8k4qzLc.js";import"./ContentCopyTwoTone-C1c9_2em.js";import"./HelpOutlineTwoTone-B28k7bNY.js";import"./ErrorOutlined-CRFOwhri.js";import"./GetAppTwoTone-B431n5bV.js";import"./InfoOutlined--CY1tT3m.js";import"./PhoneTwoTone-C3hHeKiJ.js";import"./DeleteTwoTone-tNK8eKV0.js";import"./CheckCircleTwoTone-DasE1-rH.js";const Y={title:"UI/WizardChoiceButtonGroup",component:m,parameters:{design:{type:"figma",url:"https://www.figma.com/file/vLusb6uSfhx45OyFx5IHwy/(XDM)-Extensible-Data-Management-Comps?type=design&node-id=2955-29513&mode=design&t=Dhbz59ySu37vSy4e-4"}}},e={args:{children:i.jsxs(i.Fragment,{children:[i.jsx(t,{title:"'Classic' Access Requirement",description:"These access requirements use proprietary a proprietary model for describing access conditions. If you need to maintain compatibility with a legacy access requirement, or cannot use DUO, choose this option."}),i.jsx(t,{title:"DUO Access Requirement",description:"The Data Use Ontology (DUO) is an open standard for describing access requirement conditions. Access Requirements managed under DUO support additional automation features."})]})}},o={args:{children:i.jsxs(i.Fragment,{children:[i.jsx(t,{title:"File",description:"Some option with a file icon. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines.",icon:i.jsx(l,{fontSize:"large"})}),i.jsx(t,{title:"Folder or Directory",description:'Select this option for "Folder or Directory".',icon:i.jsx(d,{fontSize:"large"})})]})}};var r,s,n;e.parameters={...e.parameters,docs:{...(r=e.parameters)==null?void 0:r.docs,source:{originalSource:`{
  args: {
    children: <>
        <WizardChoiceButton title={"'Classic' Access Requirement"} description={'These access requirements use proprietary a proprietary model for describing access conditions. If you need to maintain compatibility with a legacy access requirement, or cannot use DUO, choose this option.'} />
        <WizardChoiceButton title={'DUO Access Requirement'} description={'The Data Use Ontology (DUO) is an open standard for describing access requirement conditions. Access Requirements managed under DUO support additional automation features.'} />
      </>
  }
}`,...(n=(s=e.parameters)==null?void 0:s.docs)==null?void 0:n.source}}};var a,c,p;o.parameters={...o.parameters,docs:{...(a=o.parameters)==null?void 0:a.docs,source:{originalSource:`{
  args: {
    children: <>
        <WizardChoiceButton title={'File'} description={'Some option with a file icon. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines.'} icon={<InsertDriveFileTwoTone fontSize={'large'} />} />
        <WizardChoiceButton title={'Folder or Directory'} description={'Select this option for "Folder or Directory".'} icon={<FolderTwoTone fontSize={'large'} />} />
      </>
  }
}`,...(p=(c=o.parameters)==null?void 0:c.docs)==null?void 0:p.source}}};const Z=["Basic","WithIcons"];export{e as Basic,o as WithIcons,Z as __namedExportsOrder,Y as default};
