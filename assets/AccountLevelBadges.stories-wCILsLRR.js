import{g as f}from"./userProfileHandlers-EAVWcZLK.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-DsV7Uqwg.js";import{A}from"./AccountLevelBadges-CGaoe2ix.js";import"./VerificationSubmission-BDh1zA9f.js";import"./index-_oJM0qQX.js";import"./iframe-B7lNEjCA.js";import"./mockEntity-1a0VDMuY.js";import"./mockFileEntity-D40PT4_O.js";import"./StringUtils-C95LMFI-.js";import"./mock_file_handle-BSSHlK6B.js";import"./mockProject-B2V1oVYx.js";import"./mockTeam-DRf4roD8.js";import"./SynapseConstants-DL5YhH4S.js";import"./OrientationBanner-mORNTher.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-CP2flBOM.js";import"./index-iHqCGgSD.js";import"./spreadSx-CwcO6WA9.js";import"./react-C8gp6qo_.js";import"./FullWidthAlert-hDDl8tGl.js";import"./Alert-Blqd_fNk.js";import"./createTheme-DVjZoLcM.js";import"./DefaultPropsProvider-Cyw12EVv.js";import"./useSlot-Co92EhaQ.js";import"./useForkRef-QOk-agIc.js";import"./createSimplePaletteValueFilter-BiBnMtNg.js";import"./createSvgIcon-zcikS4QR.js";import"./Close-DTFq5PlQ.js";import"./IconButton-MRX9Tl10.js";import"./useTimeout-BDErO9dO.js";import"./ButtonBase-CpibtBKw.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-CSoU-aEZ.js";import"./Paper-l2vU89bV.js";import"./useTheme-DdAf-Ccq.js";import"./useTheme-BpTHkjke.js";import"./Stack-D4AYLr5g.js";import"./useThemeProps-BtqvP0WI.js";import"./getThemeProps-D1SG0DsT.js";import"./extendSxProp-C7d5w1mF.js";import"./Box-CDAuR3Sa.js";import"./AlertTitle-DxXMQd8X.js";import"./Typography-DBnwRkQ7.js";import"./index--3ZaasC4.js";import"./ClickAwayListener-DrGahT-8.js";import"./getReactElementRef-Deaobhwy.js";import"./index-CuVSgrUP.js";import"./index-BqdGDFpd.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-D_bI5i2G.js";import"./Tooltip-lUCmHMJ3.js";import"./index-Do8mbRFX.js";import"./useControlled-CTTwHfL4.js";import"./Popper-DbiyN3lk.js";import"./Button-D1Zc7cY5.js";import"./uniqueId-CJSnTSFd.js";import"./toString-B7qVd2uL.js";import"./isArray-BVc5tk0h.js";import"./isSymbol-DxIswJ5e.js";import"./times-C2V6Ker1.js";import"./_Uint8Array-4Fua8vo1.js";import"./identity-DKeuBCMA.js";import"./toInteger-T3Rot4a2.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-DQoxcdop.js";import"./QueryClientProvider-DZo2I7_f.js";import"./Link-8oHfVMM1.js";import"./Collapse-PeaT3Cz9.js";import"./_baseUniq-BioGUUFG.js";import"./_getTag-DMNH3Rat.js";import"./isEqual-DVzAcMpg.js";import"./noop-DX6rZLP_.js";import"./merge-DN43w6rZ.js";import"./_initCloneObject-D074hTky.js";import"./tinycolor-Begke6kS.js";import"./Fade-BrjpvEaI.js";import"./inputBaseClasses-CZKuk046.js";import"./calculateFriendlyFileSize-ChX25_t7.js";import"./CheckCircleTwoTone-Ck5csnvz.js";import"./InfoTwoTone-C4STztOF.js";import"./useMutation-BNmK4RdG.js";import"./dayjs.min-4LP4YV8J.js";import"./chunk-AYJ5UCUI-C7xelVKS.js";import"./cloneDeep-C13AQJD-.js";import"./Skeleton-BOqcwHCi.js";import"./AccountLevelBadge-D7WiS_08.js";import"./Card-BmSTCKwV.js";import"./ConfirmationDialog-CDNKE4b5.js";import"./DialogBase-DiEEqhDw.js";import"./Close-BMCOSMfh.js";import"./HelpPopover-Dr56S06n.js";import"./MarkdownPopover-Dygx-4QT.js";import"./LightTooltip-B-qfkzgD.js";import"./MarkdownSynapse-DNhl0cBY.js";import"./SkeletonButton-BF5SBREW.js";import"./SkeletonInlineBlock-JMyIX4aF.js";import"./SkeletonTable-qfkj7msZ.js";import"./SkeletonParagraph-DiUeZz7j.js";import"./HelpOutlineTwoTone-CgVanTZ9.js";import"./Dialog-AUPNd8is.js";import"./DialogActions-txJJl_M4.js";import"./Modal-CH553VzN.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-Citfx5Ol.js";import"./DialogContent-CZBtnTJU.js";import"./DialogTitle-nW3pKEXF.js";import"./LoadingScreen-DFCQZmux.js";import"./LinearProgress-DoN5Jcz6.js";import"./ToastMessage-DQKZ_7T8.js";import"./CSSTransition-BI8GX5I9.js";const kt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const Ut=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,Ut as __namedExportsOrder,kt as default};
