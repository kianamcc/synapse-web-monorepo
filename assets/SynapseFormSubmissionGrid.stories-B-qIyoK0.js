import{j as l}from"./jsx-runtime-D39jwkIv.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-dxY1kvC5.js";import{g as T}from"./handlers-Csc5h1O8.js";import{aH as S,M as a}from"./useFiles-B4K0HM1Q.js";import"./OrientationBanner-CL-ftGHP.js";import"./index-BVDw5WRY.js";import"./StringUtils-lE31obNl.js";import{l as _}from"./index-DD916Rjb.js";import{S as E}from"./SynapseFormSubmissionGrid-DPENh5cf.js";import"./mockSchema-RduhCEe4.js";import"./mockFileEntity-uvS13SbX.js";import"./mock_file_handle-3wYKbysY.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-C1kkU6Cf.js";import"./mockTeam-BQtXqKBj.js";import"./SynapseConstants-Cy6AFt5n.js";import"./uniqueId-CCCNLdRY.js";import"./toString-Cnma8B0E.js";import"./isObjectLike-DY5ARhM3.js";import"./iframe-CLB8zn3r.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-KIvlyPfn.js";import"./times-3-y929mQ.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-Bk5ShhwE.js";import"./asyncJobHandlers-w5TSb9lo.js";import"./BasicMockedCrudService-DpGe4xdQ.js";import"./cloneDeep-DRve-2g3.js";import"./_Uint8Array-DF57BDa6.js";import"./_initCloneObject-BZ5RhWFx.js";import"./_getTag-DqP87pun.js";import"./isEqual-vdG8nD8x.js";import"./_baseIsEqual-C4lIKSWB.js";import"./mockAnnotationColumns-Cvt7Xlu-.js";import"./tableQueryHandlers-BQcw-FZo.js";import"./omit-D3G1vpXp.js";import"./_baseGet-sFYvhvxi.js";import"./isNil-Cg0XEkkB.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-Dm6LhwjU.js";import"./_baseFlatten-DsT8JIo7.js";import"./pick-CM2zeKgw.js";import"./_baseSet-DObybeAD.js";import"./hasIn-SGQqJtCJ.js";import"./accessRequirementAclHandlers-BZmCeaIQ.js";import"./mockAccessRequirementAcls-BhPU_2Qz.js";import"./mockAccessRequirements-DRtWSVKg.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-B6wTqEDI.js";import"./accessRequirementHandlers-C7YeahFs.js";import"./wikiHandlers-dDqWU7mw.js";import"./mockWikiPageKey-ApyVnmr_.js";import"./teamHandlers-BnkoLICE.js";import"./dataAccessRequestHandlers-BYkFMNDA.js";import"./MockResearchProject-JX1T_jFs.js";import"./mock_discussion-C8EsPUmu.js";import"./fakerUtils-CWg7Fj8B.js";import"./index-Dihvb0ZK.js";import"./mockTableEntity-BxhCRytR.js";import"./mockFileEntityACLVariants-O6nTSVwy.js";import"./entityHandlers-D6nhU4aW.js";import"./mockEntity-DJ_bXtML.js";import"./mockEvaluationQueue-CELZepB6.js";import"./featureFlagHandlers-S6v2KRgV.js";import"./fileHandlers-eAkF3PGm.js";import"./personalAccessTokenHandlers-BFhHtUoE.js";import"./researchProjectHandlers-Bf0meNRp.js";import"./resetTwoFactorAuthHandlers-ujhKYFO8.js";import"./userProfileHandlers-B5O08Rs2.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-DVa8RRVS.js";import"./FullWidthAlert-DX8boHuP.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-x-J5_beW.js";import"./createTheme-DMsj8ftm.js";import"./resolveComponentProps-ByJQNuwe.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-DzNT1O1i.js";import"./createSvgIcon-B3AKd2cd.js";import"./DefaultPropsProvider-D-nVBZLz.js";import"./Close-DFowflBo.js";import"./IconButton-C0tYfXRh.js";import"./ButtonBase-DJAMH7Md.js";import"./useTimeout-BUaaVD43.js";import"./useIsFocusVisible-Brdx5a5c.js";import"./useEventCallback-DlaNXhB0.js";import"./Paper-Bxx_Whxx.js";import"./Stack-DpwqU_wj.js";import"./getThemeProps-PSvmS7hA.js";import"./useTheme-Bec-LrS3.js";import"./Box-DMWa71Ws.js";import"./AlertTitle-CAlQiVdT.js";import"./Typography-DSGH8yyG.js";import"./useTheme-X4n7DT2y.js";import"./Grow-D_e84Gg4.js";import"./index-De4_hU5_.js";import"./utils-B5tg3FTA.js";import"./ClickAwayListener-D0xy-Edw.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-DkhFPqXc.js";import"./index-rLgDW05n.js";import"./useControlled-BN-u63ln.js";import"./useId-me0PSUGK.js";import"./Popper-73XFw0vX.js";import"./Button-7yTQbH-Q.js";import"./useQuery-_9xZu4Of.js";import"./utils-CWEzw51o.js";import"./Link-DD0QZad6.js";import"./Collapse-DsAPfyZ4.js";import"./tinycolor-Begke6kS.js";import"./Fade-CjfO6n7T.js";import"./Skeleton-BrPdZBdA.js";import"./inputBaseClasses-CyKUb8GN.js";import"./calculateFriendlyFileSize-BmwiOem5.js";import"./CheckCircleTwoTone-CMCBIRlc.js";import"./InfoTwoTone-D0C9zRKP.js";import"./mutation-BEBlT8KE.js";import"./dayjs.min-BQMLYqDn.js";import"./chunk-AYJ5UCUI-DMZK6AaU.js";import"./index-Bh97n3M_.js";import"./react-IwA7Zo0w.js";import"./util-BHpzBWcp.js";import"./WideButton-1Sr2spvA.js";import"./DeleteTwoTone-CulOzVp9.js";import"./createSvgIcon-CogojnIQ.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-DAogDZuT.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-Cm7E_mAI.js";import"./DialogBase-zrIdmHCv.js";import"./Close-DPJbYib1.js";import"./HelpPopover-BqAOh9jV.js";import"./MarkdownPopover-D_MhOGLx.js";import"./LightTooltip-B8DyrHf4.js";import"./MarkdownSynapse-BkdPcUDO.js";import"./SkeletonButton-D0Bf3B75.js";import"./SkeletonInlineBlock-CLtSEpTn.js";import"./SkeletonTable-1Y7mwPv1.js";import"./SkeletonParagraph-Dbp_Kudu.js";import"./HelpOutlineTwoTone-ByIV-Bc4.js";import"./DialogTitle-D-odq3cD.js";import"./DialogContent-CUWsaOZj.js";import"./Dialog-Be3XxRat.js";import"./Modal-B51kXYan.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-CqVUn39e.js";import"./WarningDialog-C3noGNmA.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
