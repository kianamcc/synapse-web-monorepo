import{j as l}from"./jsx-runtime-CmPIAL3R.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-BI5WaB2N.js";import{g as T}from"./handlers-D_YoMG-9.js";import{aF as S,M as a}from"./useFiles-CmCgIeiW.js";import"./OrientationBanner-C0xDeZrc.js";import"./index-CPAysl28.js";import"./StringUtils-DN6u4g4A.js";import{l as _}from"./index-Cr-CdOs3.js";import{S as E}from"./SynapseFormSubmissionGrid-DoQzEdCQ.js";import"./mockSchema-Bgy5YM9e.js";import"./mockFileEntity-B051zSEi.js";import"./mock_file_handle-DwnN5i7-.js";import"./mock_user_profile-Bg50HGfI.js";import"./mockProject-BADZdnNl.js";import"./mockTeam-Dmuk-uES.js";import"./SynapseConstants-Bc9QkOuy.js";import"./uniqueId-Cr7PhUb0.js";import"./toString-DQNdCqKW.js";import"./isObjectLike-P-b5C6_6.js";import"./iframe-QVaIwGim.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-Bfnfksep.js";import"./times-B2D-NVlp.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-zT4oQu7W.js";import"./asyncJobHandlers-CHqCIbqc.js";import"./BasicMockedCrudService-BsN8UFwd.js";import"./cloneDeep-DR4FZuwC.js";import"./_Uint8Array-DB8Kyaej.js";import"./_initCloneObject-neulzZJe.js";import"./_getTag-DWiVyzA_.js";import"./isEqual-DHqGUy3F.js";import"./_baseIsEqual-6dzMR-mO.js";import"./mockAnnotationColumns-8AOzN1ki.js";import"./tableQueryHandlers-CYmDmfqq.js";import"./omit-WLDB-Cgv.js";import"./_baseGet-EQaw0TzS.js";import"./isNil-mIoS0wuh.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-dsrSF2eN.js";import"./_baseFlatten-DNL4cquJ.js";import"./pick-CsgEWgR0.js";import"./_baseSet-BZJTR9lO.js";import"./hasIn-BXRcdHmJ.js";import"./accessRequirementAclHandlers-lIKTV2AH.js";import"./mockAccessRequirementAcls-D9jMHwpb.js";import"./mockAccessRequirements-BYYcJfHZ.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-5OtZEItt.js";import"./accessRequirementHandlers-D3WcBp5T.js";import"./wikiHandlers-Cgr0bJ2A.js";import"./mockWikiPageKey-BVBr8FLI.js";import"./teamHandlers-C-xg0kp1.js";import"./dataAccessRequestHandlers-D65dbRmA.js";import"./MockResearchProject-Cx1CwFIT.js";import"./mock_discussion-DDSadETW.js";import"./fakerUtils-DxZitB_B.js";import"./index-BcBaCuja.js";import"./mockTableEntity-CkiZh-qs.js";import"./mockFileEntityACLVariants-BZiU0-2m.js";import"./entityHandlers-BYRRUidI.js";import"./mockEntity-BtCdJCr9.js";import"./mockEvaluationQueue-xdL_Cm3q.js";import"./featureFlagHandlers-CNOcC6oX.js";import"./fileHandlers-3OWiH19t.js";import"./personalAccessTokenHandlers-BpJxMElZ.js";import"./researchProjectHandlers-DgaaI0IK.js";import"./resetTwoFactorAuthHandlers-BfN6vlYH.js";import"./userProfileHandlers-P6JRoTjy.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-BSRsHy0V.js";import"./FullWidthAlert-CvUbrEPM.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-CgoZYfUp.js";import"./createTheme-DbiXvULE.js";import"./resolveComponentProps-C_PwEHlD.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-ig00w_A-.js";import"./createSvgIcon-80tXWpUn.js";import"./DefaultPropsProvider-CnfF9-Rb.js";import"./Close-CiQ4NjwL.js";import"./IconButton-BMcfXnSR.js";import"./ButtonBase-CpR5inzy.js";import"./useTimeout-yyO-i-xC.js";import"./useIsFocusVisible-BXrQNL1d.js";import"./useEventCallback-BOxHP3Qg.js";import"./Paper-r1jl6Dpp.js";import"./Stack-Ctx1XrrG.js";import"./getThemeProps-DF9R0_70.js";import"./useTheme-DZzq6rBq.js";import"./Box-kZGPzUZt.js";import"./AlertTitle-B5ZGPuqh.js";import"./Typography-DfZQX40p.js";import"./useTheme-DqGtWJHD.js";import"./Grow-DEfANa_e.js";import"./index-Be48diex.js";import"./utils-DIxQ68J5.js";import"./ClickAwayListener-DA4X__Yz.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-Bv2IYlCg.js";import"./index-CYokp0Sh.js";import"./useControlled-CM8uzyV4.js";import"./useId-fgnRTItM.js";import"./Popper-BtCISb9F.js";import"./Button-YR-ir9vf.js";import"./useQuery-tUAo3_tB.js";import"./utils-B4Lkbc1h.js";import"./Link-BcZTHBP_.js";import"./Collapse-Cowqr0Rv.js";import"./tinycolor-Begke6kS.js";import"./Fade-BA0eqmYo.js";import"./Skeleton-CKTyZAmZ.js";import"./inputBaseClasses-BZ6K1IEd.js";import"./calculateFriendlyFileSize-aUiohfss.js";import"./CheckCircleTwoTone-D1KX2BuI.js";import"./InfoTwoTone-DJBg44qu.js";import"./useMutation-Bl5Kk_05.js";import"./dayjs.min-DGPe2AkK.js";import"./chunk-AYJ5UCUI-ClSnvEhG.js";import"./index-Cfi_5BoH.js";import"./react-DdODerWs.js";import"./util-BIMDO8qI.js";import"./WideButton-D_s_LmmL.js";import"./DeleteTwoTone-DmNjQq9k.js";import"./createSvgIcon-C4IJgq6b.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-_U91MnGD.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-BkQVgGxg.js";import"./DialogBase-DN9nlIMA.js";import"./Close-n3OPsT2v.js";import"./HelpPopover-CWfJnml5.js";import"./MarkdownPopover-CcrCFwWP.js";import"./LightTooltip-BxxzEMaR.js";import"./MarkdownSynapse-ULZM-wOs.js";import"./SkeletonButton-BeGWqy-b.js";import"./SkeletonInlineBlock-s5U7u7IS.js";import"./SkeletonTable-NNXRM3SA.js";import"./SkeletonParagraph--_tl4g9l.js";import"./HelpOutlineTwoTone-BxXTvgTb.js";import"./DialogTitle-Bql07QX4.js";import"./DialogContent-BiuLjb53.js";import"./Dialog-Ddc-7dGa.js";import"./Modal-BxwcqA7N.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-D_Yla7EQ.js";import"./WarningDialog-B2Se2-Gk.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
