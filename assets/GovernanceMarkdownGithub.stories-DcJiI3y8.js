import{t as o}from"./VerificationSubmission-OWkqLMYZ.js";import{g as u,b5 as d,b6 as l,B as S,b7 as f,M as O}from"./useFiles-CtjU0UZ7.js";import"./StringUtils-C5rFena9.js";import{h as i,H as n}from"./index-DNo7F9Yk.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-CyxkTjOK.js";import"./SynapseConstants-HbkKhgzl.js";import"./OrientationBanner-CshYfrww.js";import"./index-01OgG1qB.js";import"./index-DTK8yXiD.js";import"./iframe-CvYaoHVj.js";import"./spreadSx-CwcO6WA9.js";import"./react-DH66hlil.js";import"./FullWidthAlert-ZQjOoxm3.js";import"./Alert-BYp2EJZI.js";import"./createTheme-aM5VLUiz.js";import"./DefaultPropsProvider-CmhSSicv.js";import"./useSlot-C8BVnOP5.js";import"./useForkRef-B8MjIxnS.js";import"./createSimplePaletteValueFilter-Com0BGVT.js";import"./createSvgIcon-DkqjO5wZ.js";import"./Close-CELpiYcp.js";import"./IconButton-CC_uewQy.js";import"./useTimeout-BkRL3IIv.js";import"./ButtonBase-UL8vgMVX.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-BVH9aY3T.js";import"./Paper-OFH_KjEE.js";import"./useTheme-Dqm1pUhK.js";import"./useTheme-U-RwML_u.js";import"./Stack-Cci7O7ML.js";import"./extendSxProp-lZk6lgIG.js";import"./getThemeProps-BgL4ceoy.js";import"./Box-DcMM8zLt.js";import"./AlertTitle-BY19Ps-v.js";import"./Typography-D1NZrSF7.js";import"./index-8SIWIhuK.js";import"./ClickAwayListener-D1X95kKj.js";import"./getReactElementRef-DTlu16VU.js";import"./index-4R7E1JGW.js";import"./index-Bx6bc031.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-CbpX2AED.js";import"./Tooltip-Dj8QUNkD.js";import"./index-B76dTo4r.js";import"./useControlled-B5ZzhVG3.js";import"./Popper-CAW1LZuT.js";import"./Button-CB4uDwHM.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-ZU2je9FH.js";import"./QueryClientProvider-DMzdf9tA.js";import"./Link-BwFUk3Oj.js";import"./Collapse-CkCee2Jw.js";import"./_baseUniq-0u_Y41qn.js";import"./_Uint8Array-CuoJTB6Q.js";import"./isArray-DY9Ezigh.js";import"./_getTag-CBA9pD0g.js";import"./isEqual-DdqtLaCO.js";import"./merge-DxffwPAM.js";import"./_initCloneObject-BFyHq_Yd.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-eve2HPw4.js";import"./inputBaseClasses-BFPy7elr.js";import"./calculateFriendlyFileSize-DuMKA-3z.js";import"./CheckCircleTwoTone-BJe0-l4L.js";import"./InfoTwoTone-o1Sk_S6o.js";import"./useMutation-DmalvCqZ.js";import"./dayjs.min-DZEyTAO2.js";import"./chunk-AYJ5UCUI-B3tBNz5t.js";import"./cloneDeep-DeYm0Lvx.js";import"./Skeleton-BUCObm11.js";import"./SkeletonButton-YavyCMvP.js";import"./SkeletonInlineBlock-CyFZwYx0.js";import"./SkeletonTable-DmAxbCWC.js";import"./times-C7T2VGyP.js";import"./toInteger-DTa-VsHm.js";import"./isSymbol-eZOMjrah.js";import"./SkeletonParagraph-Ck43b8yt.js";import"./MarkdownSynapse-BFijmDOD.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(S.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=f(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Zr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const zr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,zr as __namedExportsOrder,Zr as default};
