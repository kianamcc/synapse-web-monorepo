import{g as f}from"./userProfileHandlers-BzKQUfHA.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-fwRLhGbr.js";import{A}from"./AccountLevelBadges-CelYC0LQ.js";import"./VerificationSubmission-BDh1zA9f.js";import"./index-Cl5WHg4v.js";import"./iframe-CiPNy815.js";import"./mockEntity-civGKI8d.js";import"./mockFileEntity-q1S9zC86.js";import"./StringUtils-NPb0VexC.js";import"./mock_file_handle-BSSHlK6B.js";import"./mockProject-BK2U1EcH.js";import"./mockTeam-DxeGOaeI.js";import"./SynapseConstants-B8l2OMPk.js";import"./OrientationBanner-Bby0TFFa.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-BxuR_vo1.js";import"./index-Y2_7qyTT.js";import"./spreadSx-CwcO6WA9.js";import"./react-Dtfv9P2B.js";import"./FullWidthAlert-B-BMAEeS.js";import"./Alert-oytxK5Je.js";import"./createTheme-RUiFmI_W.js";import"./DefaultPropsProvider-FS1r-X2U.js";import"./useSlot-BV5ZvQmJ.js";import"./useForkRef-C-dtH7pD.js";import"./createSimplePaletteValueFilter-DztsWVw_.js";import"./createSvgIcon-v4WwopeH.js";import"./Close-CEyDtX3Y.js";import"./IconButton-AczJCmvj.js";import"./useTimeout-BA5R3DOd.js";import"./ButtonBase-BWviD6tE.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-DWQtTghH.js";import"./Paper-B7Y-Q-HP.js";import"./useTheme-BsulMRaf.js";import"./useTheme-0IisDZIx.js";import"./Stack-ZVBUd5J3.js";import"./extendSxProp-gXFVNC4Y.js";import"./getThemeProps-plWpQ3Lq.js";import"./Box-BHsZ7Z3g.js";import"./AlertTitle-3qVJhO4S.js";import"./Typography-KbDqkm-r.js";import"./index-sXDbKBZ3.js";import"./ClickAwayListener-Bz9xyM5k.js";import"./getReactElementRef-xHZTpTG3.js";import"./index-pTUyDkO4.js";import"./index-7gQlUqDb.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-xPbtW7qM.js";import"./Tooltip-C8s8txK1.js";import"./index-PsXj0yzt.js";import"./useControlled-Qtb3VGc2.js";import"./Popper-BmbmkZCj.js";import"./Button-CnNmkRun.js";import"./uniqueId-BH7hVDmm.js";import"./toString-CdTzKmJz.js";import"./isArray-DEOD9vUq.js";import"./isSymbol-D5i-ZS4K.js";import"./times-DYTup6yP.js";import"./_Uint8Array-C-s0epD8.js";import"./identity-DKeuBCMA.js";import"./toInteger-C15E4fEB.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-BpAlhGD_.js";import"./QueryClientProvider-C5kb4OB9.js";import"./Link-CT9hiCy-.js";import"./Collapse-DlQYoAVS.js";import"./_baseUniq-BabFNIaN.js";import"./_getTag-Cw3MvDSQ.js";import"./isEqual-CUm5pL-b.js";import"./merge-P1u9Z5mp.js";import"./_initCloneObject-BhXh6Epx.js";import"./tinycolor-Begke6kS.js";import"./Fade-CwUMTnIH.js";import"./inputBaseClasses-gUC_vYKI.js";import"./calculateFriendlyFileSize-CEXKEGgc.js";import"./CheckCircleTwoTone-Gfdrryy2.js";import"./InfoTwoTone-lxJmBppl.js";import"./useMutation-DU_qR7xN.js";import"./dayjs.min-CLS8WRHo.js";import"./chunk-AYJ5UCUI-BAH5wvuu.js";import"./cloneDeep-C8vY3ckw.js";import"./Skeleton-BWv50vL0.js";import"./AccountLevelBadge-1FxaTeI3.js";import"./Card-i0Ll6QQ3.js";import"./ConfirmationDialog-beUdfxXE.js";import"./DialogBase-p7ppsSvl.js";import"./Close-DYU14c9l.js";import"./HelpPopover-C8oLwXhg.js";import"./MarkdownPopover-BZAQfzkN.js";import"./LightTooltip-smFE3cEg.js";import"./MarkdownSynapse-CnS1lzrb.js";import"./SkeletonButton-B5wN6HLM.js";import"./SkeletonInlineBlock-tf8x05Ru.js";import"./SkeletonTable-BEuOTJME.js";import"./SkeletonParagraph-GreXnCdC.js";import"./HelpOutlineTwoTone-Dl5YpQmx.js";import"./DialogTitle-CrUlPAQU.js";import"./DialogContent-B3YHWStU.js";import"./DialogActions-CthnRrj6.js";import"./Dialog-275khZR1.js";import"./Modal-BXy7u1Tx.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-CJ9HAw-l.js";import"./LoadingScreen-kGksxcQx.js";import"./LinearProgress-DZFkwp8p.js";import"./ToastMessage-SjoyMTrY.js";import"./CSSTransition-CHEKsDqZ.js";const St={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const Et=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,Et as __namedExportsOrder,St as default};
