import{t as o}from"./VerificationSubmission-OWkqLMYZ.js";import{g as u,b5 as d,b6 as l,B as S,b7 as f,M as O}from"./useFiles-Cgksw9GV.js";import"./StringUtils-C5rFena9.js";import{h as i,H as n}from"./index-Dxa3vHKZ.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-DiPLu2u1.js";import"./SynapseConstants-DrEaJj_3.js";import"./OrientationBanner-w6CGgbYt.js";import"./index-DuAwIN7G.js";import"./index-BWg8gmP9.js";import"./iframe-DxMgOC42.js";import"./spreadSx-CwcO6WA9.js";import"./react-DJ4XftcX.js";import"./FullWidthAlert-VXj3VNMq.js";import"./Alert-B9JdgmLn.js";import"./createTheme-CloygEZI.js";import"./DefaultPropsProvider-cqqlf3DM.js";import"./useSlot-DU4Wne47.js";import"./useForkRef-CuZsgNn8.js";import"./createSimplePaletteValueFilter-Czpf93oR.js";import"./createSvgIcon-Dy41uhPC.js";import"./Close-BWkLyPEE.js";import"./IconButton-CDhHBjru.js";import"./useTimeout-DzhOkixu.js";import"./ButtonBase-DkwHGrOc.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-F1HsRVw0.js";import"./Paper-DAmi0aXy.js";import"./useTheme-B9J3VmFE.js";import"./useTheme-De2PrO1i.js";import"./Stack-_CRd7W9c.js";import"./extendSxProp-B-QpAch6.js";import"./getThemeProps-8ael_php.js";import"./Box-BmJ8Nv4Q.js";import"./AlertTitle-CflXlpyw.js";import"./Typography-BLdAJe5v.js";import"./index-Carkrmqq.js";import"./ClickAwayListener-BUboLwwV.js";import"./getReactElementRef-D5laRzAV.js";import"./index-VF1kjDI9.js";import"./index-BALo3nNz.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-3SXN3MNY.js";import"./Tooltip-WXobDaFj.js";import"./index-Cs-59t9j.js";import"./useControlled-CHFqetIf.js";import"./Popper-Bj0Z85qz.js";import"./Button-U--Q96r5.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-DC0yPoOC.js";import"./QueryClientProvider-Dv3ud_cs.js";import"./Link-BcPfG-VZ.js";import"./Collapse-CWDJbsS2.js";import"./_baseUniq-CIfoarHK.js";import"./_Uint8Array-BmO9vIzF.js";import"./isArray-DLkopDsw.js";import"./_getTag-BcVhETby.js";import"./isEqual-YOpW3a2z.js";import"./merge-Ci0u7Z_j.js";import"./_initCloneObject-B21APcHN.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-DxNVQUJQ.js";import"./inputBaseClasses-CG1WD0jj.js";import"./calculateFriendlyFileSize-D9TEFVUS.js";import"./CheckCircleTwoTone-3NdcQIhw.js";import"./InfoTwoTone-EwVotAye.js";import"./useMutation-9Biue8zq.js";import"./dayjs.min-WjH_UZhr.js";import"./chunk-AYJ5UCUI-CTNvUNcY.js";import"./cloneDeep-BRyqSLXf.js";import"./Skeleton-DRmMTT-E.js";import"./SkeletonButton-IPLZ754V.js";import"./SkeletonInlineBlock-Co2o8vkk.js";import"./SkeletonTable-Bl_mg8cd.js";import"./times-VwcTsY5H.js";import"./toInteger-Dro27ezU.js";import"./isSymbol-CxrNOdHT.js";import"./SkeletonParagraph-BIpERWVT.js";import"./MarkdownSynapse-DVGLZX8L.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(S.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=f(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Zr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const zr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,zr as __namedExportsOrder,Zr as default};
