import{u as o}from"./VerificationSubmission-BDh1zA9f.js";import{g as u,bd as d,be as l,B as f,bf as S,M as O}from"./useFiles-BS7yqeVu.js";import"./StringUtils-C95LMFI-.js";import{h as i,H as n}from"./index-DvAq-iq2.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-DDuvFgIN.js";import"./SynapseConstants-DCD24UIR.js";import"./OrientationBanner-CGhK73qt.js";import"./index-VZePWZJ8.js";import"./index-CxNQf4-_.js";import"./iframe-Dg4AUp8p.js";import"./spreadSx-CwcO6WA9.js";import"./react-BE2NnvmD.js";import"./FullWidthAlert-9fheV2TI.js";import"./Alert-DD6LY4o6.js";import"./createTheme-BNZ2-g8i.js";import"./DefaultPropsProvider-CSmwSXtp.js";import"./useSlot-ZEQjcV4h.js";import"./useForkRef-DVZbic4O.js";import"./createSimplePaletteValueFilter-BTCFvpVs.js";import"./createSvgIcon-px9Ll1Sh.js";import"./Close-8Omd6HQo.js";import"./IconButton-DdwXXYxc.js";import"./useTimeout-CmN0NgJY.js";import"./ButtonBase-CYIBe76-.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-CpqZJiGb.js";import"./Paper-Bi_y7tq5.js";import"./useTheme-Ct9xyNCZ.js";import"./useTheme-Cwe9o9si.js";import"./Stack-BkBDhbY7.js";import"./useThemeProps-DYPM01el.js";import"./getThemeProps-z9TSZhd3.js";import"./extendSxProp-doqBFT6I.js";import"./Box-29dRnPqp.js";import"./AlertTitle-YP7vES6y.js";import"./Typography-CM0Hx7IB.js";import"./index-CylRv6A2.js";import"./ClickAwayListener-Bk5rN7ro.js";import"./getReactElementRef-CbfHskog.js";import"./index-DdouHa0C.js";import"./index-BHXNWvPG.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-DfWYfHBy.js";import"./Tooltip-BWVeFaIO.js";import"./index-BuW0orvV.js";import"./useControlled-CMSkeTs6.js";import"./Popper-DK9BpulM.js";import"./Button-Joy47VZj.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-BmYDawry.js";import"./QueryClientProvider-BzV6DB3V.js";import"./Link-4Y6YnrJW.js";import"./Collapse-BssXeki7.js";import"./_baseUniq-Cqxswx2d.js";import"./_Uint8Array-DcB2X5w5.js";import"./isArray-KmhwUPCT.js";import"./_getTag-BUgEEbP5.js";import"./isEqual-BdiiYa5f.js";import"./noop-DX6rZLP_.js";import"./merge-CCPnLMoR.js";import"./_initCloneObject-DaAH_7Pj.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-CYQ77buy.js";import"./inputBaseClasses-BSYFsfzv.js";import"./calculateFriendlyFileSize-C5Z4DbWG.js";import"./CheckCircleTwoTone-BjTNRj81.js";import"./InfoTwoTone-Dm6rZBIc.js";import"./useMutation-BLBDAaI6.js";import"./dayjs.min-pJYmqCac.js";import"./chunk-AYJ5UCUI-py0OTTT6.js";import"./cloneDeep-aIiF9cuR.js";import"./Skeleton-CXBbRm57.js";import"./SkeletonButton-5PuaKsOE.js";import"./SkeletonInlineBlock-3dbCcAAv.js";import"./SkeletonTable-DCktIaq7.js";import"./times-9qm3v6wO.js";import"./toInteger-BX512c4M.js";import"./isSymbol-pOBVduix.js";import"./SkeletonParagraph-DfSQ1gty.js";import"./MarkdownSynapse-Dz_zjB6g.js";import"./Container-CtY1R-lk.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(f.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=S(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Qr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const Xr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,Xr as __namedExportsOrder,Qr as default};
