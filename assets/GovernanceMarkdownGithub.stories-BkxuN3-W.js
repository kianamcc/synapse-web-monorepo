import{u as o}from"./VerificationSubmission-CNoSrCdk.js";import{g as u,bb as d,bc as l,B as S,bd as f,M as O}from"./useFiles-4YAxzx0q.js";import"./StringUtils-CwQ1lgbR.js";import{h as i,H as n}from"./index-DC28gTRp.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-D2CHNE2O.js";import"./SynapseConstants-BurzPALN.js";import"./OrientationBanner-DP3WWY3f.js";import"./index-LjJS82Ec.js";import"./index-DFKD-tlO.js";import"./iframe-DPDZl7CU.js";import"./spreadSx-CwcO6WA9.js";import"./react-D1yoBqs4.js";import"./FullWidthAlert-BUJuSc-c.js";import"./Alert-DQ-m75Fo.js";import"./createTheme-DlnlCWs-.js";import"./DefaultPropsProvider-CPkErIBX.js";import"./useSlot-CuvyTh6A.js";import"./useForkRef-BgCIv5Am.js";import"./createSimplePaletteValueFilter-DIhWIqwL.js";import"./createSvgIcon-B4uCatTZ.js";import"./Close-CmzkMwAl.js";import"./IconButton-CKec_Uyq.js";import"./useTimeout-sYeuExjN.js";import"./ButtonBase-Dmd9LT3R.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-DGpCod9i.js";import"./Paper-uUXWZxxA.js";import"./useTheme-rB-re95z.js";import"./useTheme-DvZKIZv1.js";import"./Stack-BtAiw5Y0.js";import"./extendSxProp-Cwsr4q6G.js";import"./getThemeProps-B95fEd_g.js";import"./Box-_4wb5t0A.js";import"./AlertTitle-CSTn9zmN.js";import"./Typography-BZ2PGk-H.js";import"./index-Cs3zhFJ7.js";import"./ClickAwayListener-BZeSBdqd.js";import"./getReactElementRef-Cdg41oby.js";import"./index-Bq1q-nPq.js";import"./index-FtV39xre.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-BlrKM9H8.js";import"./Tooltip-BkszJ6A3.js";import"./index-D9wEq1Sm.js";import"./useControlled-ZqyZ1t-t.js";import"./Popper-CbJ95q-5.js";import"./Button-FcYL-glf.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-COlWpTTb.js";import"./QueryClientProvider-BxmwlV1f.js";import"./Link-C_j_NUNw.js";import"./Collapse-DE9QFK8z.js";import"./_baseUniq-BMjHlurh.js";import"./_Uint8Array-CdGkK4mZ.js";import"./isArray-q8ycs3ZN.js";import"./_getTag-DEVzP-z8.js";import"./isEqual-DetpVs-L.js";import"./merge-CXpHJeH_.js";import"./_initCloneObject-DmfTE17Q.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-6qfKi2r7.js";import"./inputBaseClasses-Bft2YqCg.js";import"./calculateFriendlyFileSize-Cg8Uh6Fg.js";import"./CheckCircleTwoTone-BAxuPcKP.js";import"./InfoTwoTone-CsWT3aqU.js";import"./useMutation-Dqmxrm1j.js";import"./dayjs.min-COljXBzg.js";import"./chunk-AYJ5UCUI-DRRGzA-U.js";import"./cloneDeep-B4VKzWqO.js";import"./Skeleton-C3BbJI2K.js";import"./SkeletonButton-CHgS1zaX.js";import"./SkeletonInlineBlock-DlGfSExb.js";import"./SkeletonTable-Df9aKucP.js";import"./times-CTQf4Byd.js";import"./toInteger-AUvhMREd.js";import"./isSymbol-Dm5OuX-X.js";import"./SkeletonParagraph-dUUtO6N-.js";import"./MarkdownSynapse-CG0XK3VK.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(S.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=f(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Zr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const zr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,zr as __namedExportsOrder,Zr as default};
