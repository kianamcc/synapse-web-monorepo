import{g as f}from"./userProfileHandlers-Cyhe3N93.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-B6vegzDl.js";import{A}from"./AccountLevelBadges-BJ6GHN9m.js";import"./VerificationSubmission-BDh1zA9f.js";import"./index-csDdk4hT.js";import"./iframe-C7ZZ0tJ9.js";import"./mockEntity-mP2Ghzp0.js";import"./mockFileEntity-34J6Lt-X.js";import"./StringUtils-NPb0VexC.js";import"./mock_file_handle-BSSHlK6B.js";import"./mockProject-By--vfxh.js";import"./mockTeam-DDNUP265.js";import"./SynapseConstants-BtPK8Xf5.js";import"./OrientationBanner-DkmEu8ww.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-BiABM7zM.js";import"./index-jL26_Tdg.js";import"./spreadSx-CwcO6WA9.js";import"./react-Q48zzpqQ.js";import"./FullWidthAlert-KH7-cPlx.js";import"./Alert-BYyjJPXO.js";import"./createTheme-CYqCSXBz.js";import"./DefaultPropsProvider-BaJQA2z9.js";import"./useSlot-DtyCmT7o.js";import"./useForkRef-COfB-m0m.js";import"./createSimplePaletteValueFilter-B4WcSHb2.js";import"./createSvgIcon-3ocGpMNh.js";import"./Close-D02RjwJU.js";import"./IconButton-Ccbi1Krc.js";import"./useTimeout-Q5NueQY6.js";import"./ButtonBase-Cpa2hZQw.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-rSba4AH8.js";import"./Paper-BBhN9Li4.js";import"./useTheme-DLyZrVj1.js";import"./useTheme-CCBKYA_N.js";import"./Stack-Bnhis5DF.js";import"./extendSxProp-CyXZT-CH.js";import"./getThemeProps-qLDLSUkn.js";import"./Box-CElDN2lR.js";import"./AlertTitle-Bg93ACEw.js";import"./Typography-sIVWjIv7.js";import"./index-DzEjapEh.js";import"./ClickAwayListener-DBCnr4i9.js";import"./getReactElementRef-BpSyMuG3.js";import"./index-PB3v-e0n.js";import"./index-CXUQQ7NY.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-CyxMG2Lo.js";import"./Tooltip-B8Ca4h6r.js";import"./index-Beyie8vy.js";import"./useControlled-IUjrSiMK.js";import"./Popper-BsmYiSO_.js";import"./Button-Bfd3_aE-.js";import"./uniqueId-BsjarHhf.js";import"./toString-CfbYm880.js";import"./isArray-YIKNzQ6l.js";import"./isSymbol-BzOFySpl.js";import"./times-BfyVqzQb.js";import"./_Uint8Array-B0WjZf3K.js";import"./identity-DKeuBCMA.js";import"./toInteger-Bs0lvEuP.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-DT4b9CON.js";import"./QueryClientProvider-DvweCRTp.js";import"./Link-DulGgx7_.js";import"./Collapse-kXTM2RiY.js";import"./_baseUniq-CbUydBEl.js";import"./_getTag-ohfK-TjG.js";import"./isEqual-dhI3ZA9D.js";import"./merge-DqYA71tY.js";import"./_initCloneObject-Cz9cO3Kh.js";import"./tinycolor-Begke6kS.js";import"./Fade-s5_xMiSm.js";import"./inputBaseClasses-kkvSt9vt.js";import"./calculateFriendlyFileSize-DX_Sn0UC.js";import"./CheckCircleTwoTone-BQ0LZxD5.js";import"./InfoTwoTone-CNBCB-S5.js";import"./useMutation-B1e0RvlB.js";import"./dayjs.min-Bvvs6Fr9.js";import"./chunk-AYJ5UCUI-D-jAjeB5.js";import"./cloneDeep-G_YIi0g_.js";import"./Skeleton-CIkEHEVl.js";import"./AccountLevelBadge-D9UI8zR-.js";import"./Card-RqDhDodS.js";import"./ConfirmationDialog-zBODo5fy.js";import"./DialogBase-CU3Ba39L.js";import"./Close-BnEMvRni.js";import"./HelpPopover-D8QCIYSZ.js";import"./MarkdownPopover-Chfvt8-7.js";import"./LightTooltip-CA2rONac.js";import"./MarkdownSynapse-An2c1n22.js";import"./SkeletonButton-CgoNMEcM.js";import"./SkeletonInlineBlock-D6Bz1bda.js";import"./SkeletonTable-FSXrOnyY.js";import"./SkeletonParagraph-CPcrTDx3.js";import"./HelpOutlineTwoTone-CkFSfgTR.js";import"./DialogTitle-DY6iczpc.js";import"./DialogContent-ukhGFZMV.js";import"./Dialog-CAtqKlvp.js";import"./Modal-BJQwHTaM.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-BnSAxtKA.js";import"./LoadingScreen-DDbi5pSz.js";import"./LinearProgress-BcdLDYly.js";import"./ToastMessage-DygEvVcD.js";import"./CSSTransition-ghXF_Mig.js";const Rt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const St=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,St as __namedExportsOrder,Rt as default};
