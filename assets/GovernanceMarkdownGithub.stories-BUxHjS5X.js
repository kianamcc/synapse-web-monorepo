import{u as o}from"./VerificationSubmission-BDh1zA9f.js";import{g as u,bd as d,be as l,B as f,bf as S,M as O}from"./useFiles-DU0KbIhN.js";import"./StringUtils-C95LMFI-.js";import{h as i,H as n}from"./index-CyDiuyBF.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-CurgAAUc.js";import"./SynapseConstants-BvkCgq3q.js";import"./OrientationBanner-BIqxssu4.js";import"./index-D_I69aNJ.js";import"./index-7KdIsKFN.js";import"./iframe-CsYtrl69.js";import"./spreadSx-CwcO6WA9.js";import"./react-CSJLJtgY.js";import"./FullWidthAlert-BcjTofwJ.js";import"./Alert-CXyg9zZW.js";import"./createTheme-D99HVzHw.js";import"./DefaultPropsProvider-BDkT1_Zg.js";import"./useSlot-DDzMf-NS.js";import"./useForkRef-DdlSoLQT.js";import"./createSimplePaletteValueFilter-zzg78wfu.js";import"./createSvgIcon-BJGUPwTr.js";import"./Close-C1MGPhMz.js";import"./IconButton-hCNA1nO_.js";import"./useTimeout-C6eH0LMY.js";import"./ButtonBase-DHXgaqy8.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-ChNe0x20.js";import"./Paper-4XJoZFT8.js";import"./useTheme-DDJP92fw.js";import"./useTheme-BUI8t9EN.js";import"./Stack-BgPIGJBB.js";import"./useThemeProps-C-lZ45sq.js";import"./getThemeProps-UG1giO0s.js";import"./extendSxProp-D3xzd78a.js";import"./Box-CyMjV0lw.js";import"./AlertTitle-B9hh7xTw.js";import"./Typography-CgELToTR.js";import"./index-DxIYZYxe.js";import"./ClickAwayListener-qcG_xo1w.js";import"./getReactElementRef-CZMZMACG.js";import"./index-Dnc0KVG1.js";import"./index-CYG8ReaC.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-COFvT4Fr.js";import"./Tooltip-TJmbofi_.js";import"./index-CCmkHAOR.js";import"./useControlled-COBnzW9o.js";import"./Popper-nifOx2HX.js";import"./Button-BlDCFaad.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-C9GAOvRL.js";import"./QueryClientProvider-BpgeQpsy.js";import"./Link-K0WQ4RJB.js";import"./Collapse-B9jEaYxB.js";import"./_baseUniq-C3nQM1t_.js";import"./_Uint8Array-DnaM-X-G.js";import"./isArray-BvmHQydZ.js";import"./_getTag-BH98QkbB.js";import"./isEqual-BR072uNX.js";import"./noop-DX6rZLP_.js";import"./merge-BiDvuW0y.js";import"./_initCloneObject-CR3nmsfR.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-BVW8WfrF.js";import"./inputBaseClasses-DEk3SEq1.js";import"./calculateFriendlyFileSize-CPpMCUfT.js";import"./CheckCircleTwoTone-B52REKll.js";import"./InfoTwoTone-croQFE36.js";import"./useMutation-wdvmQ00s.js";import"./dayjs.min-C_S2YiE5.js";import"./chunk-AYJ5UCUI-DPYjxEGe.js";import"./cloneDeep-DtQ1Vi2m.js";import"./Skeleton-CMgleuOv.js";import"./SkeletonButton-DysiiZ24.js";import"./SkeletonInlineBlock-Dtnbmd3B.js";import"./SkeletonTable-DMXihQLH.js";import"./times-CxTsb-MR.js";import"./toInteger-Bpva5dYQ.js";import"./isSymbol-DE5mZbO0.js";import"./SkeletonParagraph-CGFX-rEj.js";import"./MarkdownSynapse-MzKZnwYp.js";import"./Container-Cfn6Xe9t.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(f.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=S(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Qr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const Xr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,Xr as __namedExportsOrder,Qr as default};
