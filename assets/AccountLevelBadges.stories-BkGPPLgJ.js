import{g as f}from"./userProfileHandlers-CjMpN1G6.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-BOdJ4aAD.js";import{A}from"./AccountLevelBadges-C01sLTR-.js";import"./VerificationSubmission-BDh1zA9f.js";import"./index-CG7CRE7n.js";import"./iframe-BnNg7yJB.js";import"./mockEntity-C17b1GbS.js";import"./mockFileEntity-CEN6Hcj1.js";import"./StringUtils-NPb0VexC.js";import"./mock_file_handle-BSSHlK6B.js";import"./mockProject-hJPiYhqo.js";import"./mockTeam-BjwnR4XF.js";import"./SynapseConstants-JfPkMcg0.js";import"./OrientationBanner-CouH68_J.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-BcZOnU6T.js";import"./index-BK6cjXBZ.js";import"./spreadSx-CwcO6WA9.js";import"./react-B6KPdu5T.js";import"./FullWidthAlert-CP1QTJXS.js";import"./Alert-B7JKdAU4.js";import"./createTheme-DdCDgYei.js";import"./DefaultPropsProvider-TIkVZDCj.js";import"./useSlot-BDueLrxA.js";import"./useForkRef-CYVt1D8Q.js";import"./createSimplePaletteValueFilter-gOntg_V8.js";import"./createSvgIcon-BdtPq1Tw.js";import"./Close-CbTjf3zS.js";import"./IconButton-BHcrqX1G.js";import"./useTimeout-D6cH1pf-.js";import"./ButtonBase-BwM1D_G8.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-B-WmS9d9.js";import"./Paper-BOOJzAP_.js";import"./useTheme-DqFLheya.js";import"./useTheme-UGDwZqNk.js";import"./Stack-CfEr4J4E.js";import"./extendSxProp-C1uB2K5e.js";import"./getThemeProps-Br_57JSj.js";import"./Box-ChHhuOMP.js";import"./AlertTitle-CLr5v-qU.js";import"./Typography-FRQIFPS_.js";import"./index-75JHCm82.js";import"./ClickAwayListener-B3OwTDLO.js";import"./getReactElementRef-T0dppYio.js";import"./index-BtJ10Ccv.js";import"./index-BCqjZQ9Q.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-Baht38yj.js";import"./Tooltip-KZeFSyMF.js";import"./index-DoAu-rxh.js";import"./useControlled-BgFNFYLB.js";import"./Popper-BCpq0bpJ.js";import"./Button-CGtpPk7o.js";import"./uniqueId-DVHVce_n.js";import"./toString-pM__c-Jx.js";import"./isArray-DK_LmvOp.js";import"./isSymbol-BGAVTM_8.js";import"./times-BV-dSR2s.js";import"./_Uint8Array-DdnP8-f5.js";import"./identity-DKeuBCMA.js";import"./toInteger-C65bF937.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-CE3P3pkB.js";import"./QueryClientProvider-tLXh-4q3.js";import"./Link-CBjYA8yP.js";import"./Collapse-DsMcEJji.js";import"./_baseUniq-BVagotzB.js";import"./_getTag-B7gw1DJ9.js";import"./isEqual-DknNpZAe.js";import"./merge-DRt0v3QZ.js";import"./_initCloneObject-B1aKMoJ4.js";import"./tinycolor-Begke6kS.js";import"./Fade-DxY0BkxR.js";import"./inputBaseClasses-BH_Uaz0L.js";import"./calculateFriendlyFileSize-BVV4z-OV.js";import"./CheckCircleTwoTone-B_JgC-4w.js";import"./InfoTwoTone-B41A2Lg3.js";import"./useMutation-CRT9uZDv.js";import"./dayjs.min-BsaYAIeB.js";import"./chunk-AYJ5UCUI-CSb7mSbs.js";import"./cloneDeep-C5a2C-Tz.js";import"./Skeleton-Dp3uQSvj.js";import"./AccountLevelBadge-Cf_P1Zy6.js";import"./Card-CGy8La5F.js";import"./ConfirmationDialog-DPxoFgw6.js";import"./DialogBase-Y4dB7eeU.js";import"./Close-CyeNJ6Bu.js";import"./HelpPopover-Bdi6HoX0.js";import"./MarkdownPopover-DTkoJ8Bd.js";import"./LightTooltip-CNo-fDUN.js";import"./MarkdownSynapse-bg68uR0c.js";import"./SkeletonButton-Bg0usTi6.js";import"./SkeletonInlineBlock-ARtMbZhT.js";import"./SkeletonTable-JtMcYXf2.js";import"./SkeletonParagraph-DVVDbLgl.js";import"./HelpOutlineTwoTone-B8mrS6E9.js";import"./DialogTitle-BivQIBDZ.js";import"./DialogContent-BbEbOMLT.js";import"./Dialog-dsuR94IW.js";import"./Modal-Bpj4pqpC.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-CQsvqnej.js";import"./LoadingScreen-BFc2EPyh.js";import"./LinearProgress-JMm9K6Zr.js";import"./ToastMessage-BiFh4ViF.js";import"./CSSTransition-Cf4Bwzcd.js";const Rt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const St=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,St as __namedExportsOrder,Rt as default};
