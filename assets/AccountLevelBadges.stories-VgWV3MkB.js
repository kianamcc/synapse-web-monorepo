import{g as f}from"./userProfileHandlers-DVrS5slM.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-BxW2OjF_.js";import{A}from"./AccountLevelBadges-ColW5raZ.js";import"./VerificationSubmission-BDh1zA9f.js";import"./index-Cl7AtXBG.js";import"./iframe-DCM7iHZO.js";import"./mockEntity-BbIlQEfm.js";import"./mockFileEntity-DEPcvpAJ.js";import"./StringUtils-C95LMFI-.js";import"./mock_file_handle-BSSHlK6B.js";import"./mockProject-CmQW7wlE.js";import"./mockTeam-BTeQHdmk.js";import"./SynapseConstants-CbS11lwu.js";import"./OrientationBanner-DAAziPr7.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-CjpbMb-2.js";import"./index-BlqYlNqH.js";import"./spreadSx-CwcO6WA9.js";import"./react-CEAJSkGg.js";import"./FullWidthAlert-CAFxwpcN.js";import"./Alert-D6R0aZpH.js";import"./createTheme-CX2Fjxji.js";import"./DefaultPropsProvider-BnvpeM39.js";import"./useSlot-BGFFn2Yp.js";import"./useForkRef-CuaJz7-Y.js";import"./createSimplePaletteValueFilter-p4K6Mnoc.js";import"./createSvgIcon-DUQWWt-z.js";import"./Close-n0ge04QY.js";import"./IconButton-BIB-CAZ9.js";import"./useTimeout-DNpXQZXA.js";import"./ButtonBase-Dr_L7g0l.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-B_PETcC2.js";import"./Paper-CF2lzpio.js";import"./useTheme-BpONhpPf.js";import"./useTheme-B9tfsfzJ.js";import"./Stack-CnakP1Nf.js";import"./useThemeProps-wm4aMtJv.js";import"./getThemeProps-C7E0PQ7U.js";import"./extendSxProp-ClQEqrR8.js";import"./Box-BAunhwEm.js";import"./AlertTitle-C78MxdqV.js";import"./Typography-BGL1ewSU.js";import"./index-BBXrvSSK.js";import"./ClickAwayListener-wANS1sm5.js";import"./getReactElementRef-B-FQDB6t.js";import"./index-Dr007Q5D.js";import"./index-qpPU8qdy.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-BeiywY4t.js";import"./Tooltip-BLdHd-MN.js";import"./index-WIo8OHGx.js";import"./useControlled-DNjUBqvl.js";import"./Popper-BLn1Ov7-.js";import"./Button-B5V1-M1A.js";import"./uniqueId-BbuF_QB9.js";import"./toString-tvYildNh.js";import"./isArray-Cc9w60IV.js";import"./isSymbol-4h04pfmi.js";import"./times-UINggwMT.js";import"./_Uint8Array-BbI8ilIQ.js";import"./identity-DKeuBCMA.js";import"./toInteger-B8v9JCJd.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-BNpHjXkF.js";import"./QueryClientProvider-NhrOwhBC.js";import"./Link-DlixphRW.js";import"./Collapse-Dln0G3S5.js";import"./_baseUniq-pMV98HDI.js";import"./_getTag-BSojBbQx.js";import"./isEqual-CkmIEn_k.js";import"./noop-DX6rZLP_.js";import"./merge-DlUKwuU8.js";import"./_initCloneObject-DwB7xy4-.js";import"./tinycolor-Begke6kS.js";import"./Fade-DXKqJCZP.js";import"./inputBaseClasses-DJY9IRAF.js";import"./calculateFriendlyFileSize-BZdSz9n-.js";import"./CheckCircleTwoTone-DJ65aMmV.js";import"./InfoTwoTone-C3Zlortc.js";import"./useMutation-CV3ESuZm.js";import"./dayjs.min-81jMEWHJ.js";import"./chunk-AYJ5UCUI-B4cY1IOw.js";import"./cloneDeep-BYvILRz3.js";import"./Skeleton-B7QyB6bJ.js";import"./AccountLevelBadge-DBahbuLY.js";import"./Card-BnO8vERd.js";import"./ConfirmationDialog-CxngDJ_Y.js";import"./DialogBase-CsasPAY4.js";import"./Close-BA994ZGw.js";import"./HelpPopover-4wcl2C_W.js";import"./MarkdownPopover-BM1sk7rm.js";import"./LightTooltip-BQQCI2uv.js";import"./MarkdownSynapse-Urs2Stsu.js";import"./SkeletonButton-CfFJX_hS.js";import"./SkeletonInlineBlock-DgFoGvQA.js";import"./SkeletonTable-DGMy4eb_.js";import"./SkeletonParagraph-D0MI-JIc.js";import"./HelpOutlineTwoTone-BkQiZrs0.js";import"./Dialog-BN-CX9Ni.js";import"./DialogActions-CPCASf9j.js";import"./Modal-CfNLcFt4.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-DXmD26bu.js";import"./DialogContent-DcD-G3ub.js";import"./DialogTitle-D9v3Uwjn.js";import"./LoadingScreen-Cs3usnJ9.js";import"./LinearProgress-CaJVvjNy.js";import"./ToastMessage-CG_QYRxy.js";import"./CSSTransition-CZKHFzdq.js";const kt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const Ut=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,Ut as __namedExportsOrder,kt as default};
