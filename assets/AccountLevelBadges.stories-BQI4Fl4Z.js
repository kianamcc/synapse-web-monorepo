import{g as f}from"./userProfileHandlers-DZQekGC7.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-BS7yqeVu.js";import{A}from"./AccountLevelBadges-Ds7oxerN.js";import"./VerificationSubmission-BDh1zA9f.js";import"./index-DvAq-iq2.js";import"./iframe-Dg4AUp8p.js";import"./mockEntity--0rWKovh.js";import"./mockFileEntity-CmGVhN31.js";import"./StringUtils-C95LMFI-.js";import"./mock_file_handle-BSSHlK6B.js";import"./mockProject-BBs6Dvsx.js";import"./mockTeam-Dp0SG-0i.js";import"./SynapseConstants-DCD24UIR.js";import"./OrientationBanner-CGhK73qt.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-VZePWZJ8.js";import"./index-CxNQf4-_.js";import"./spreadSx-CwcO6WA9.js";import"./react-BE2NnvmD.js";import"./FullWidthAlert-9fheV2TI.js";import"./Alert-DD6LY4o6.js";import"./createTheme-BNZ2-g8i.js";import"./DefaultPropsProvider-CSmwSXtp.js";import"./useSlot-ZEQjcV4h.js";import"./useForkRef-DVZbic4O.js";import"./createSimplePaletteValueFilter-BTCFvpVs.js";import"./createSvgIcon-px9Ll1Sh.js";import"./Close-8Omd6HQo.js";import"./IconButton-DdwXXYxc.js";import"./useTimeout-CmN0NgJY.js";import"./ButtonBase-CYIBe76-.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-CpqZJiGb.js";import"./Paper-Bi_y7tq5.js";import"./useTheme-Ct9xyNCZ.js";import"./useTheme-Cwe9o9si.js";import"./Stack-BkBDhbY7.js";import"./useThemeProps-DYPM01el.js";import"./getThemeProps-z9TSZhd3.js";import"./extendSxProp-doqBFT6I.js";import"./Box-29dRnPqp.js";import"./AlertTitle-YP7vES6y.js";import"./Typography-CM0Hx7IB.js";import"./index-CylRv6A2.js";import"./ClickAwayListener-Bk5rN7ro.js";import"./getReactElementRef-CbfHskog.js";import"./index-DdouHa0C.js";import"./index-BHXNWvPG.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-DfWYfHBy.js";import"./Tooltip-BWVeFaIO.js";import"./index-BuW0orvV.js";import"./useControlled-CMSkeTs6.js";import"./Popper-DK9BpulM.js";import"./Button-Joy47VZj.js";import"./uniqueId-CmVmy48j.js";import"./toString-APlpq5bG.js";import"./isArray-KmhwUPCT.js";import"./isSymbol-pOBVduix.js";import"./times-9qm3v6wO.js";import"./_Uint8Array-DcB2X5w5.js";import"./identity-DKeuBCMA.js";import"./toInteger-BX512c4M.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-BmYDawry.js";import"./QueryClientProvider-BzV6DB3V.js";import"./Link-4Y6YnrJW.js";import"./Collapse-BssXeki7.js";import"./_baseUniq-Cqxswx2d.js";import"./_getTag-BUgEEbP5.js";import"./isEqual-BdiiYa5f.js";import"./noop-DX6rZLP_.js";import"./merge-CCPnLMoR.js";import"./_initCloneObject-DaAH_7Pj.js";import"./tinycolor-Begke6kS.js";import"./Fade-CYQ77buy.js";import"./inputBaseClasses-BSYFsfzv.js";import"./calculateFriendlyFileSize-C5Z4DbWG.js";import"./CheckCircleTwoTone-BjTNRj81.js";import"./InfoTwoTone-Dm6rZBIc.js";import"./useMutation-BLBDAaI6.js";import"./dayjs.min-pJYmqCac.js";import"./chunk-AYJ5UCUI-py0OTTT6.js";import"./cloneDeep-aIiF9cuR.js";import"./Skeleton-CXBbRm57.js";import"./AccountLevelBadge-BrtAt4i8.js";import"./Card-D5iw0X-a.js";import"./ConfirmationDialog-DJAvNMuG.js";import"./DialogBase-KolqNndW.js";import"./Close-DY4f6N8i.js";import"./HelpPopover-DpX9HGdA.js";import"./MarkdownPopover-C7ILXxyP.js";import"./LightTooltip-BaKFVNFq.js";import"./MarkdownSynapse-Dz_zjB6g.js";import"./SkeletonButton-5PuaKsOE.js";import"./SkeletonInlineBlock-3dbCcAAv.js";import"./SkeletonTable-DCktIaq7.js";import"./SkeletonParagraph-DfSQ1gty.js";import"./HelpOutlineTwoTone-BszBGNcc.js";import"./Dialog-BzNz5bPf.js";import"./DialogActions-DOvljrm5.js";import"./Modal-CKXEy8dO.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-C_78sV1-.js";import"./DialogContent-CDsJayPq.js";import"./DialogTitle-Dpu0KS5R.js";import"./LoadingScreen-BGXwziqf.js";import"./LinearProgress-CEdgfN5D.js";import"./ToastMessage-9LLroxMw.js";import"./CSSTransition-DNFUr76N.js";const kt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const Ut=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,Ut as __namedExportsOrder,kt as default};
