import{g as f}from"./userProfileHandlers-BJ1kz-bz.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-D9IjkbnM.js";import{A}from"./AccountLevelBadges-Kj_nBzyK.js";import"./VerificationSubmission-16RBrwfH.js";import"./index-BKYhqAhs.js";import"./iframe-CjifT74g.js";import"./mockEntity-BSDmNZnC.js";import"./mockFileEntity-DZKedmtT.js";import"./StringUtils-B_EIkN_W.js";import"./mock_file_handle-t2fDWYxy.js";import"./mockProject-BMMNUQYS.js";import"./mockTeam-Ht8K2-k6.js";import"./SynapseConstants-CimKnm-8.js";import"./OrientationBanner-CzU6KDpL.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-CgsjeSPa.js";import"./index-6vxeCzL4.js";import"./spreadSx-CwcO6WA9.js";import"./react-DClyoqOD.js";import"./FullWidthAlert-TY94FRna.js";import"./Alert-BDTTfspR.js";import"./createTheme-Dy0-m8-A.js";import"./DefaultPropsProvider-DuHQt5tX.js";import"./useSlot-Bh66Acib.js";import"./useForkRef-D3GN_CBh.js";import"./createSimplePaletteValueFilter-BJFb3sY0.js";import"./createSvgIcon-Bp3iCONJ.js";import"./Close-DE9Xj8OJ.js";import"./IconButton-kCilc8aH.js";import"./useTimeout-DAnP99B3.js";import"./ButtonBase-CbRzwM7N.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-oIAkzJX4.js";import"./Paper-BgoErbyD.js";import"./useTheme-DxuATEnu.js";import"./useTheme-DYfQlcXU.js";import"./Stack-CD-9J5q_.js";import"./extendSxProp-DBncvLzO.js";import"./getThemeProps-DQzIp4hW.js";import"./Box-4s3DQrSt.js";import"./AlertTitle-DjZT1bwn.js";import"./Typography-CHNd49HH.js";import"./index-BEFSRFSM.js";import"./ClickAwayListener-Dxjx-8zF.js";import"./getReactElementRef-BVECeuLd.js";import"./index-Calt9S7p.js";import"./index-CEnxySY1.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-AKYW22Tv.js";import"./Tooltip-D4mylLgV.js";import"./index-D050dNpj.js";import"./useControlled-DS0tk13e.js";import"./Popper-Hnc_u6mX.js";import"./Button-BVPpZjkW.js";import"./uniqueId-a90_NqWn.js";import"./toString-DAJxseuJ.js";import"./isArray-D5p7Gkib.js";import"./isSymbol-Bx6tt6xH.js";import"./times-BIKSUyh8.js";import"./_Uint8Array-CesznVbr.js";import"./identity-DKeuBCMA.js";import"./toInteger-CDPya1oj.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-DxAfwxuj.js";import"./QueryClientProvider-BeU9GayN.js";import"./Link-DPGwCB9W.js";import"./Collapse-Quox-cv-.js";import"./_baseUniq-Bfrtub2j.js";import"./_getTag-Dw1mXAbx.js";import"./isEqual-BRYXIgAL.js";import"./merge-DussZOY2.js";import"./_initCloneObject-CwMaFeaY.js";import"./tinycolor-Begke6kS.js";import"./Fade-BieE9Iqq.js";import"./inputBaseClasses-CWBiX7gU.js";import"./calculateFriendlyFileSize-DCRKp9Ar.js";import"./CheckCircleTwoTone-BCUKw-TQ.js";import"./InfoTwoTone-BDufQF4P.js";import"./useMutation-CW7KVecC.js";import"./dayjs.min-Bq9OIHwb.js";import"./chunk-AYJ5UCUI-DuqvUR3-.js";import"./cloneDeep-tK7GVlr1.js";import"./Skeleton-BIk9JEA-.js";import"./AccountLevelBadge-To_QFvQe.js";import"./Card-BO2__gcY.js";import"./ConfirmationDialog-GPPcKX-4.js";import"./DialogBase-BAygkpqC.js";import"./Close-B3H0DK4p.js";import"./HelpPopover-DFXvLEgg.js";import"./MarkdownPopover-gNTXlxIu.js";import"./LightTooltip-Bvffg9Zp.js";import"./MarkdownSynapse-VCTMf1oB.js";import"./SkeletonButton-C8-3HW5_.js";import"./SkeletonInlineBlock-DLu8p9lp.js";import"./SkeletonTable-BHgP5xM2.js";import"./SkeletonParagraph-BZA5Vk9S.js";import"./HelpOutlineTwoTone-BcWivEdN.js";import"./DialogTitle-Cbv00GwA.js";import"./DialogContent-NhWdXS3b.js";import"./Dialog-DSqglxdm.js";import"./Modal-DW3CW9jz.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-vKwNtdyh.js";import"./LoadingScreen--AcYclSW.js";import"./LinearProgress-D1xhsDt0.js";import"./ToastMessage-BVpWsPTl.js";import"./CSSTransition-BfZNDZTk.js";const Rt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const St=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,St as __namedExportsOrder,Rt as default};
