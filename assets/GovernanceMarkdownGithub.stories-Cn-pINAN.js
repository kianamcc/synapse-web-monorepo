import{u as o}from"./VerificationSubmission-CNoSrCdk.js";import{g as u,bb as d,bc as l,B as S,bd as f,M as O}from"./useFiles-CKtnfdDb.js";import"./StringUtils-CwQ1lgbR.js";import{h as i,H as n}from"./index-9sMnHJKq.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-BDU8pU5W.js";import"./SynapseConstants-fNl-i50f.js";import"./OrientationBanner-gqy1HDsn.js";import"./index-CGVjBlVQ.js";import"./index-BEywTRXl.js";import"./iframe-BBf9fga1.js";import"./spreadSx-CwcO6WA9.js";import"./react-Caq8yfsY.js";import"./FullWidthAlert-Bi0gZVKF.js";import"./Alert-DjjEhYM-.js";import"./createTheme-DnAg7-pt.js";import"./DefaultPropsProvider-Cfr5VO6N.js";import"./useSlot-BllXXWSn.js";import"./useForkRef-Bw1cKGeI.js";import"./createSimplePaletteValueFilter-CAkAaFOz.js";import"./createSvgIcon-CNp-xswd.js";import"./Close-hnsAHL5n.js";import"./IconButton-BBdlrjSw.js";import"./useTimeout-CE0_wtx6.js";import"./ButtonBase-9G7Po7WW.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-BpTw4cNV.js";import"./Paper-DQg47uXD.js";import"./useTheme-tPwOBdLV.js";import"./useTheme-DvQxV26P.js";import"./Stack-Ne3s2k1L.js";import"./extendSxProp-Bz-U6EUc.js";import"./getThemeProps-CA8XxeOI.js";import"./Box-CSTbBPIE.js";import"./AlertTitle-SbtAKUth.js";import"./Typography-e_bn1j-d.js";import"./index-BjsiQW48.js";import"./ClickAwayListener-CSw4j7vn.js";import"./getReactElementRef-s4ti0GiA.js";import"./index-CUrvls_8.js";import"./index-D5YMrZI7.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-B59OOFam.js";import"./Tooltip-CxMHW-Bb.js";import"./index-Bmnvv36_.js";import"./useControlled-1lsXcUhy.js";import"./Popper-uzFVxROp.js";import"./Button-D48JG1ln.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-CssB-2z9.js";import"./QueryClientProvider-CxifRez6.js";import"./Link-CwZFRW9t.js";import"./Collapse-DH7Csss-.js";import"./_baseUniq-B2577OWA.js";import"./_Uint8Array-DyiAPkOc.js";import"./isArray-NH-lQ6sv.js";import"./_getTag-B8fRTFQ5.js";import"./isEqual-qIzdiEsY.js";import"./merge-aLS7RL-o.js";import"./_initCloneObject-DOyku_IR.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-CZEMhowB.js";import"./inputBaseClasses-DBgXe6lK.js";import"./calculateFriendlyFileSize-CsWbGjuW.js";import"./CheckCircleTwoTone-C2jgLeFW.js";import"./InfoTwoTone-BCYPmC9w.js";import"./useMutation-BWjpfHXT.js";import"./dayjs.min-BcH9R9G5.js";import"./chunk-AYJ5UCUI-hHORuoAF.js";import"./cloneDeep-FsMgdlCN.js";import"./Skeleton-C08EYpYz.js";import"./SkeletonButton-BZ6m6RxF.js";import"./SkeletonInlineBlock-CKLDPNro.js";import"./SkeletonTable-DDBsjsHg.js";import"./times-D0VVIBEd.js";import"./toInteger-12pzV6__.js";import"./isSymbol-BEacMpiA.js";import"./SkeletonParagraph-DgsvgiuF.js";import"./MarkdownSynapse-CdCpkgEh.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(S.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=f(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Zr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const zr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,zr as __namedExportsOrder,Zr as default};
