import{g as f}from"./userProfileHandlers-losCIA-d.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-BohibOw-.js";import{A}from"./AccountLevelBadges-B6ekJOZo.js";import"./VerificationSubmission-BDh1zA9f.js";import"./index-Djs4z110.js";import"./iframe-CKvnnJhq.js";import"./mockEntity-B6E3fqbl.js";import"./mockFileEntity-BrSlKQfO.js";import"./StringUtils-NPb0VexC.js";import"./mock_file_handle-BSSHlK6B.js";import"./mockProject-Dclk0Eou.js";import"./mockTeam-DlAB-TLf.js";import"./SynapseConstants-a2f1ATGs.js";import"./OrientationBanner-dBolsJnn.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-DVi4Wje5.js";import"./index-CkFnR4ru.js";import"./spreadSx-CwcO6WA9.js";import"./react-A7vIHcfb.js";import"./FullWidthAlert-BEFsW73f.js";import"./Alert-DDc39lQe.js";import"./createTheme-DcsDOw1A.js";import"./DefaultPropsProvider-CGqxt6ob.js";import"./useSlot-Bju1dyXB.js";import"./useForkRef-BJQkitpf.js";import"./createSimplePaletteValueFilter-B9aGn8G9.js";import"./createSvgIcon-364Lzn_b.js";import"./Close-LykhWtmH.js";import"./IconButton-CsuOJx-T.js";import"./useTimeout-BqUVErKz.js";import"./ButtonBase-CGWLsOy4.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-DK0_NXfb.js";import"./Paper-Bxri_9-b.js";import"./useTheme-bpf5HOw7.js";import"./useTheme-VJ2j0frp.js";import"./Stack-Br4KC0Ob.js";import"./extendSxProp-B2jDyka1.js";import"./getThemeProps-CmXJJfNS.js";import"./Box-CDBIpvwF.js";import"./AlertTitle-5zvJDzzp.js";import"./Typography-DUXOvTJX.js";import"./index-BDhwziWJ.js";import"./ClickAwayListener-BpdWOejG.js";import"./getReactElementRef-JptPm9gh.js";import"./index-BqxOl3YS.js";import"./index-BPjGFZ8d.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-DqmkwxJ5.js";import"./Tooltip-DC2q4Wz4.js";import"./index-CHLvizmL.js";import"./useControlled-BvqV3f_O.js";import"./Popper-cjOWIAbd.js";import"./Button-BdFuUL1S.js";import"./uniqueId-BMwRhlYS.js";import"./toString-DNkdMUwa.js";import"./isArray-C533p3iE.js";import"./isSymbol-BA2WHEYX.js";import"./times-Bj5oruIi.js";import"./_Uint8Array-B8U-SItt.js";import"./identity-DKeuBCMA.js";import"./toInteger-OMhOm0aB.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-BfSgOaRc.js";import"./QueryClientProvider-zm0Ye9sy.js";import"./Link-vbf7MeOq.js";import"./Collapse-BQIg35cI.js";import"./_baseUniq-DU7r3f6n.js";import"./_getTag-DiNzJEZe.js";import"./isEqual-B0Qaz4yZ.js";import"./merge-fz5rfo0a.js";import"./_initCloneObject-hL9_bpDH.js";import"./tinycolor-Begke6kS.js";import"./Fade-DvSChFD7.js";import"./inputBaseClasses-DP9QiBNX.js";import"./calculateFriendlyFileSize-Bf2PELXV.js";import"./CheckCircleTwoTone-DasE1-rH.js";import"./InfoTwoTone-BlO9HkXx.js";import"./useMutation-S7okSP_K.js";import"./dayjs.min-DWt_l-v8.js";import"./chunk-AYJ5UCUI-C6uHKJSQ.js";import"./cloneDeep-CrgHvOoP.js";import"./Skeleton-21P9iDr7.js";import"./AccountLevelBadge-C830xIzJ.js";import"./Card-CrFRVbuf.js";import"./ConfirmationDialog-D0DFoywd.js";import"./DialogBase-BrgeyrDN.js";import"./Close-CLrtCQ1b.js";import"./HelpPopover-BMjMLXCo.js";import"./MarkdownPopover-ol1C8EEe.js";import"./LightTooltip-C_wtrI3_.js";import"./MarkdownSynapse-BQYeZRhx.js";import"./SkeletonButton-eZRutsFo.js";import"./SkeletonInlineBlock-B0LGpiC4.js";import"./SkeletonTable-BBQWjS0A.js";import"./SkeletonParagraph-Dc5gR7bE.js";import"./HelpOutlineTwoTone-B28k7bNY.js";import"./DialogTitle-rq_-831m.js";import"./DialogContent-iImc3g0U.js";import"./DialogActions-BrOUiq3h.js";import"./Dialog-ByM21ZaG.js";import"./Modal-CqNjuUXP.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-DovbNK1-.js";import"./LoadingScreen-By0HdxlV.js";import"./LinearProgress-BWi576zp.js";import"./ToastMessage-BvIriwVK.js";import"./CSSTransition-Dn5nWB0a.js";const St={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const Et=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,Et as __namedExportsOrder,St as default};
