import{j as l}from"./jsx-runtime-CfniUVqD.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-DHPhgAH7.js";import{g as T}from"./handlers-BkVqmOSA.js";import{aF as S,M as a}from"./useFiles-BK3Gh0_l.js";import"./OrientationBanner-TpvFF3Ts.js";import"./index-w8r01unF.js";import"./StringUtils-Bj0SG9ce.js";import{l as _}from"./index-CWNPHEiF.js";import{S as E}from"./SynapseFormSubmissionGrid-BvDUzFJn.js";import"./mockSchema-BUUBeqcv.js";import"./mockFileEntity-BZcM2-ge.js";import"./mock_file_handle-C2NjfX48.js";import"./mock_user_profile-Bg50HGfI.js";import"./mockProject-B2unru0z.js";import"./mockTeam-D0UpEG4M.js";import"./SynapseConstants-2Xj6Yp9b.js";import"./uniqueId-CEuX8h5x.js";import"./toString-DlXGyx2c.js";import"./isObjectLike-DD2yD6S-.js";import"./iframe-CUCSdczr.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-C_ONlG-P.js";import"./times-D7LY3lwe.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-dNgW8dgx.js";import"./asyncJobHandlers-Dce_yUZq.js";import"./BasicMockedCrudService-BIyAkZ4S.js";import"./cloneDeep-Q3oOVsTG.js";import"./_Uint8Array-BuM38brZ.js";import"./_initCloneObject-CzY22ryU.js";import"./_getTag-WOUCB7X1.js";import"./isEqual-C71nV6ON.js";import"./_baseIsEqual-E8uLXCBr.js";import"./mockAnnotationColumns-vVSpQ7VZ.js";import"./tableQueryHandlers-BgiIKJDW.js";import"./omit-BaeBvGy2.js";import"./_baseGet-CuO10cus.js";import"./isNil-CgpPL_Iw.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-Cj45Y_uR.js";import"./_baseFlatten-SvP-443U.js";import"./pick-Dwax-xI8.js";import"./_baseSet-B89Z0tJo.js";import"./hasIn-BJ4GTwAZ.js";import"./accessRequirementAclHandlers-BKydRE2e.js";import"./mockAccessRequirementAcls-MTIHEQYw.js";import"./mockAccessRequirements-h8YukRGq.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-DiBhlaV-.js";import"./accessRequirementHandlers-CQzrUPgH.js";import"./wikiHandlers-DgsUx0de.js";import"./mockWikiPageKey-BmXOpFrq.js";import"./teamHandlers-BiTz4jz1.js";import"./dataAccessRequestHandlers-D8WOc3ys.js";import"./MockResearchProject-Cdf38IPb.js";import"./mock_discussion-DM4LxCWB.js";import"./fakerUtils-BSd2OuFA.js";import"./index-s1IOd7eQ.js";import"./mockTableEntity-D0mJdYlN.js";import"./mockFileEntityACLVariants-B-Mv2kGR.js";import"./entityHandlers-1y_XB5em.js";import"./mockEntity-BlAFxWIY.js";import"./mockEvaluationQueue-DHbEvwOk.js";import"./featureFlagHandlers-BuGuV9Ng.js";import"./fileHandlers-L5rkmIKM.js";import"./personalAccessTokenHandlers-CmTaWoo4.js";import"./researchProjectHandlers-DmeDcdMD.js";import"./resetTwoFactorAuthHandlers-mOA6W0VS.js";import"./userProfileHandlers-EUTzLKzs.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-DqohVvaO.js";import"./FullWidthAlert-BBqcXFew.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-Cv2aYRot.js";import"./createTheme-Dy24wF_1.js";import"./resolveComponentProps-ma8JMEbU.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-D7k89ytA.js";import"./createSvgIcon-l6KdUt_U.js";import"./DefaultPropsProvider-CbfxmOUo.js";import"./Close-BFG1LR7b.js";import"./IconButton-URRSVn69.js";import"./ButtonBase-CXLjw9mJ.js";import"./useTimeout-Bu1cnb2B.js";import"./useIsFocusVisible-hjtORhQC.js";import"./useEventCallback-CFNiwpIz.js";import"./Paper-D0_uR9Sy.js";import"./Stack-B5FK2opb.js";import"./getThemeProps-CUgjtIi1.js";import"./useTheme-D-9dB31D.js";import"./Box-BkoKjff6.js";import"./AlertTitle-BL4ZbCob.js";import"./Typography-Db2qQfaM.js";import"./useTheme-D5QJEr0B.js";import"./Grow-BRrJzSUm.js";import"./index-Dtn10zyK.js";import"./utils-D80l6d7_.js";import"./ClickAwayListener-CvxkHeNi.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-DxsSs5eW.js";import"./index-CYfQTFsZ.js";import"./useControlled-0G6SdZ8L.js";import"./useId-DskmTTOE.js";import"./Popper-VDjvMyAP.js";import"./Button-DcA6Wnl8.js";import"./useQuery-CT-b_ugC.js";import"./utils-Dycl1YZq.js";import"./Link-Cjca69dE.js";import"./Collapse-C36U9yxB.js";import"./tinycolor-Begke6kS.js";import"./Fade-DH2_TrMQ.js";import"./Skeleton-CvR3Skml.js";import"./inputBaseClasses-DljKtXei.js";import"./calculateFriendlyFileSize-CMfGmUEf.js";import"./CheckCircleTwoTone-BQWHkcPQ.js";import"./InfoTwoTone-CKODhZkq.js";import"./useMutation-BPptyNQx.js";import"./dayjs.min-CMsY32ZI.js";import"./chunk-AYJ5UCUI-DQQgLh9r.js";import"./index-BSHGj6el.js";import"./react-DlNSOGk7.js";import"./util-DE1IQY3C.js";import"./WideButton-BlkONb1m.js";import"./DeleteTwoTone-Bi7uh9kw.js";import"./createSvgIcon-DMC_Tlmi.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-BQFrVDb6.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-oK1qkM-r.js";import"./DialogBase-nkKM2Yev.js";import"./Close-B9dYOVfU.js";import"./HelpPopover-rmK5itNb.js";import"./MarkdownPopover-ClLCZe_F.js";import"./LightTooltip-D84bCIaB.js";import"./MarkdownSynapse-W90RTD4a.js";import"./SkeletonButton-CC-kO4fp.js";import"./SkeletonInlineBlock-DTX6z7T8.js";import"./SkeletonTable-BJ76Wpba.js";import"./SkeletonParagraph-DPCIY1Yd.js";import"./HelpOutlineTwoTone-ggXt6j4f.js";import"./DialogTitle-AQv1gyZ9.js";import"./DialogContent-CEBH16y0.js";import"./Dialog-Cdl39uXX.js";import"./Modal-BR3JccWn.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-Qcdm6Zl-.js";import"./WarningDialog-vaVga1Mn.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
