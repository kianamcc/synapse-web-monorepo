import{g as f}from"./userProfileHandlers-BuV0T6A-.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-6UDrmTYG.js";import{A}from"./AccountLevelBadges-DJsPqfgB.js";import"./VerificationSubmission-BDh1zA9f.js";import"./index-_B2cjVH7.js";import"./iframe-DaXup4WN.js";import"./mockEntity-BTVZp9Qd.js";import"./mockFileEntity-Ci7Nwf55.js";import"./StringUtils-C95LMFI-.js";import"./mock_file_handle-BSSHlK6B.js";import"./mockProject-DrSqjodK.js";import"./mockTeam-5zf4Oyrn.js";import"./SynapseConstants-hypBLRKL.js";import"./OrientationBanner-D-Ad_KzJ.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-DO9i5fSP.js";import"./index-0Exjkr72.js";import"./spreadSx-CwcO6WA9.js";import"./react-CP4ZqcKH.js";import"./FullWidthAlert-tLGyCqCx.js";import"./Alert-CoPbwJdQ.js";import"./createTheme-0xQbh0hV.js";import"./DefaultPropsProvider-Bvki0pxK.js";import"./useSlot-Dq0xnqmg.js";import"./useForkRef-vAoaxSvE.js";import"./createSimplePaletteValueFilter-Dn2ZSDDm.js";import"./createSvgIcon-D_tiKqbD.js";import"./Close-Cpm6LQZy.js";import"./IconButton-DjNjSMkw.js";import"./useTimeout-DxKu314J.js";import"./ButtonBase-CxDf0Iya.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-BrXv9hhK.js";import"./Paper-D8dnleYW.js";import"./useTheme-D8-A-0a-.js";import"./useTheme-CtlMRJLD.js";import"./Stack-DRTbJTt6.js";import"./useThemeProps-C1t7O8fM.js";import"./getThemeProps-CRJRiPRc.js";import"./extendSxProp-DKGbTOnE.js";import"./Box-CFRP72jt.js";import"./AlertTitle-Cez2UsjB.js";import"./Typography-CCOQQgSX.js";import"./index-CbCbsN5e.js";import"./ClickAwayListener-DWpjaqTE.js";import"./getReactElementRef-CCy5tafl.js";import"./index-CQx7vtrI.js";import"./index-Bo63NWas.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-a2S7IfBI.js";import"./Tooltip-BNN4uyZR.js";import"./index-DGgpv3HQ.js";import"./useControlled-DViJgbiZ.js";import"./Popper-EPaPs2kP.js";import"./Button-iINO5mWw.js";import"./uniqueId-Cz-Rang1.js";import"./toString-BmMu2Lx8.js";import"./isArray-PqDzEjBo.js";import"./isSymbol-Dk6RgkrU.js";import"./times-CyQws5oo.js";import"./_Uint8Array-Bup5ZD9h.js";import"./identity-DKeuBCMA.js";import"./toInteger-DUAzEtRR.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-lQ2tabsY.js";import"./QueryClientProvider-BqxA2MMk.js";import"./Link-BZBSuM24.js";import"./Collapse-BuJTwuq3.js";import"./_baseUniq-D2qgl31R.js";import"./_getTag-DAcmkE1f.js";import"./isEqual-DTMJ7tsS.js";import"./noop-DX6rZLP_.js";import"./merge-eG4gq0oP.js";import"./_initCloneObject-w3_8_Tro.js";import"./tinycolor-Begke6kS.js";import"./Fade-BoYFynpn.js";import"./inputBaseClasses-Cp73c6Jl.js";import"./calculateFriendlyFileSize-dtY2LNqn.js";import"./CheckCircleTwoTone-CBnB5HgO.js";import"./InfoTwoTone-C0kEYjXG.js";import"./useMutation-DhZrwB6t.js";import"./dayjs.min-AYuUP0Eh.js";import"./chunk-AYJ5UCUI-CCUScnZb.js";import"./cloneDeep-C09cW0zA.js";import"./Skeleton-mTacaXMJ.js";import"./AccountLevelBadge-C07pJGrf.js";import"./Card-CjI2hVho.js";import"./ConfirmationDialog-2wmqKR7u.js";import"./DialogBase-BpbALRjn.js";import"./Close-C17Rbla8.js";import"./HelpPopover-CLOhBhNC.js";import"./MarkdownPopover-CBRQSR8q.js";import"./LightTooltip-Wz7xglKT.js";import"./MarkdownSynapse-BCRx685q.js";import"./SkeletonButton-DwX0p5i7.js";import"./SkeletonInlineBlock-BES5B5FB.js";import"./SkeletonTable-CT3hQViZ.js";import"./SkeletonParagraph-fFi7wt0S.js";import"./HelpOutlineTwoTone-B46Hwbo5.js";import"./Dialog-B6cPjVkF.js";import"./DialogActions-CrOhpNI4.js";import"./Modal-DgkGrygl.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-Dm12SVZr.js";import"./DialogContent-BNNA34bf.js";import"./DialogTitle-CZlk3h90.js";import"./LoadingScreen-B8V2JRyW.js";import"./LinearProgress-DBxT16AH.js";import"./ToastMessage-Pt9ElIaC.js";import"./CSSTransition-TR96cEkQ.js";const kt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const Ut=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,Ut as __namedExportsOrder,kt as default};
