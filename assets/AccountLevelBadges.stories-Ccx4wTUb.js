import{g as f}from"./userProfileHandlers-eybwIuhs.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-wWQ53W6F.js";import{A}from"./AccountLevelBadges-BBZpem-g.js";import"./VerificationSubmission-BDh1zA9f.js";import"./index-CqPTR_9w.js";import"./iframe-B8dXxRrz.js";import"./mockEntity-o3EcMEBn.js";import"./mockFileEntity-7fxTQ350.js";import"./StringUtils-NPb0VexC.js";import"./mock_file_handle-BSSHlK6B.js";import"./mockProject-Dvrw4C2F.js";import"./mockTeam-Bu_tswXZ.js";import"./SynapseConstants-DLUag6lU.js";import"./OrientationBanner-CRkLOFNV.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-DmEjL0gl.js";import"./index-Fvy6OXvx.js";import"./spreadSx-CwcO6WA9.js";import"./react-DidY2G1Y.js";import"./FullWidthAlert-DR77ctOw.js";import"./Alert-DpkG2eKm.js";import"./createTheme-Bqan8iSd.js";import"./DefaultPropsProvider-CvOM3crP.js";import"./useSlot-OhfiPf_i.js";import"./useForkRef-BeT6GA-1.js";import"./createSimplePaletteValueFilter-BCFu5tCD.js";import"./createSvgIcon-BgHtG-ZK.js";import"./Close-CJ1hBDqs.js";import"./IconButton-C_XoYKbu.js";import"./useTimeout-BI-r7Chh.js";import"./ButtonBase-DHedW4PR.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-wOG2gwEP.js";import"./Paper-CNcRBNAa.js";import"./useTheme-LIw16y-R.js";import"./useTheme-ITUjA_qS.js";import"./Stack-DU1ForPl.js";import"./extendSxProp-D-vpv-1y.js";import"./getThemeProps-D7jKhtgM.js";import"./Box-CbSz_dhW.js";import"./AlertTitle-DTLD6v1o.js";import"./Typography-6dkO2MTM.js";import"./index-DK62uATf.js";import"./ClickAwayListener-D1GBWBlV.js";import"./getReactElementRef-CVCbp7Cp.js";import"./index-BcRRWnYW.js";import"./index-BDgQoSql.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-wuCwDJHH.js";import"./Tooltip-DX-SU6uL.js";import"./index-Cq9dyCaH.js";import"./useControlled-uX7GhbF6.js";import"./Popper-CXqOJrMB.js";import"./Button-BHN8_UXu.js";import"./uniqueId-C63vPQoj.js";import"./toString-PWlAtk46.js";import"./isArray-BFuLipFc.js";import"./isSymbol-BIKvGbkU.js";import"./times-Bb7GOkht.js";import"./_Uint8Array-Do_yUrdE.js";import"./identity-DKeuBCMA.js";import"./toInteger-BxMRen59.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-DkveStrn.js";import"./QueryClientProvider-DztE-yrs.js";import"./Link-8X1p5eq_.js";import"./Collapse-BMTa6CBd.js";import"./_baseUniq-CyW2Nhvq.js";import"./_getTag-BUH8RGR_.js";import"./isEqual-Bo9V0Syl.js";import"./merge-CmfNHmTH.js";import"./_initCloneObject-CyhAal79.js";import"./tinycolor-Begke6kS.js";import"./Fade-CUSl01b3.js";import"./inputBaseClasses-CcplBV6_.js";import"./calculateFriendlyFileSize-CUQjNl6R.js";import"./CheckCircleTwoTone-CdZKEvy8.js";import"./InfoTwoTone-qc6Tvhs0.js";import"./useMutation-DONRoSE-.js";import"./dayjs.min-CYR_2A92.js";import"./chunk-AYJ5UCUI-D3aPapOi.js";import"./cloneDeep-BihnUe_D.js";import"./Skeleton-Bc_aNlp6.js";import"./AccountLevelBadge-0VSb-Flp.js";import"./Card-ChBuH--j.js";import"./ConfirmationDialog-DF7UNb3u.js";import"./DialogBase-CAtsKlsb.js";import"./Close-CygH7wYp.js";import"./HelpPopover-f7HTKnpo.js";import"./MarkdownPopover-PmZrVsmE.js";import"./LightTooltip-bKds78nH.js";import"./MarkdownSynapse-Cfvn8zZg.js";import"./SkeletonButton-BC_eVRko.js";import"./SkeletonInlineBlock-nRuvAxLc.js";import"./SkeletonTable-CddpqJYO.js";import"./SkeletonParagraph-CbuD9cfx.js";import"./HelpOutlineTwoTone-suwU6zMB.js";import"./DialogTitle-DrDKBovB.js";import"./DialogContent-HCZ4OlLE.js";import"./DialogActions-DWrCkrHx.js";import"./Dialog-B_hnNk-r.js";import"./Modal-B3L40ftU.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-C9lvFiKP.js";import"./LoadingScreen-BBRvAvNd.js";import"./LinearProgress-DTYU7N8N.js";import"./ToastMessage-BNgcpklN.js";import"./CSSTransition-bM3ACgSM.js";const St={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const Et=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,Et as __namedExportsOrder,St as default};
