import{g as f}from"./userProfileHandlers-BAAp9Zet.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-B2N2HPUY.js";import{A}from"./AccountLevelBadges-BEy5wSmm.js";import"./VerificationSubmission-BDh1zA9f.js";import"./index-BSPW9gBS.js";import"./iframe-HyGsmOq6.js";import"./mockEntity-D6nsNF7R.js";import"./mockFileEntity-Cxg9um71.js";import"./StringUtils-NPb0VexC.js";import"./mock_file_handle-BSSHlK6B.js";import"./mockProject-CNolZGgZ.js";import"./mockTeam-CiNjzBR5.js";import"./SynapseConstants-Dgxzyngc.js";import"./OrientationBanner-CM4mQahX.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-Ckx9wA1o.js";import"./index-DTNlVjJ7.js";import"./spreadSx-CwcO6WA9.js";import"./react-C-ZrivrO.js";import"./FullWidthAlert-rFqRmBje.js";import"./Alert-8d9H3zz9.js";import"./createTheme-D1BQx7_9.js";import"./DefaultPropsProvider-C_zNEI2X.js";import"./useSlot-D3K8A8w7.js";import"./useForkRef-U0ZDp63e.js";import"./createSimplePaletteValueFilter-cVSg-Kao.js";import"./createSvgIcon-RS-D48a7.js";import"./Close-CvE2AhfC.js";import"./IconButton-pZgQcOFK.js";import"./useTimeout-DtwR2-Vy.js";import"./ButtonBase-36aZ1yix.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-oD9nUD2d.js";import"./Paper-CaF42frr.js";import"./useTheme-f5o2sVxe.js";import"./useTheme-BfaqaQGF.js";import"./Stack-DqCCF0aZ.js";import"./extendSxProp-iklfMelH.js";import"./getThemeProps-vMGdrB_u.js";import"./Box-BgNFQW5j.js";import"./AlertTitle-DbhJsyCT.js";import"./Typography-CdQn_xVC.js";import"./index-ChnvbaPR.js";import"./ClickAwayListener-DoRduBrz.js";import"./getReactElementRef-DwpSRZ2i.js";import"./index-C38Velpb.js";import"./index-DROQPanT.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-h00VdCaE.js";import"./Tooltip-CF7TWlNa.js";import"./index-DFvo03aM.js";import"./useControlled-C_0taDzB.js";import"./Popper-CTII9iKp.js";import"./Button-N-1HkUGf.js";import"./uniqueId-BLhD58vE.js";import"./toString-Cr7dBLXl.js";import"./isArray-BNDnJ0cX.js";import"./isSymbol-aUcSGGGb.js";import"./times-CvPrAAzW.js";import"./_Uint8Array-DPNJR1BB.js";import"./identity-DKeuBCMA.js";import"./toInteger-DlQw8do_.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-BeZx-JBU.js";import"./QueryClientProvider-CqRxmNge.js";import"./Link-B84UpXKP.js";import"./Collapse-D024h2Tt.js";import"./_baseUniq-DEewYuYN.js";import"./_getTag-DxTQRKYo.js";import"./isEqual-Dv-V6DIZ.js";import"./merge-NB7svOIH.js";import"./_initCloneObject-DHMeHRbH.js";import"./tinycolor-Begke6kS.js";import"./Fade-ByYPi2--.js";import"./inputBaseClasses-V0GV_T2d.js";import"./calculateFriendlyFileSize-C_Xem63m.js";import"./CheckCircleTwoTone-Dp5ZcmDN.js";import"./InfoTwoTone-BTeFVGl3.js";import"./useMutation-B0RPERva.js";import"./dayjs.min-2wFo7hOi.js";import"./chunk-AYJ5UCUI-CW1esgOs.js";import"./cloneDeep-i-w8KGzX.js";import"./Skeleton-BEqAEI4M.js";import"./AccountLevelBadge-DF50ZjGq.js";import"./Card-BeKBldAw.js";import"./ConfirmationDialog-Bt_k6fEA.js";import"./DialogBase-BQ5aOdfy.js";import"./Close-BC8zR4nv.js";import"./HelpPopover-6gxibe46.js";import"./MarkdownPopover-DDo4uK2-.js";import"./LightTooltip-B55yGuug.js";import"./MarkdownSynapse-BCMxM1kf.js";import"./SkeletonButton-Du7Cwqqe.js";import"./SkeletonInlineBlock-C4wn7iqx.js";import"./SkeletonTable-Bfy4useK.js";import"./SkeletonParagraph-DpFaUc_o.js";import"./HelpOutlineTwoTone-BIoZtyOL.js";import"./DialogTitle-D-KW__hk.js";import"./DialogContent-B5ncGrIh.js";import"./DialogActions-DYutTl-i.js";import"./Dialog-Qp692Dwv.js";import"./Modal-D-rKMpJP.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-l3gtyMen.js";import"./LoadingScreen-d-6ip2R1.js";import"./LinearProgress-BZXl4Gwg.js";import"./ToastMessage-OO5SIr8H.js";import"./CSSTransition-BqbGRZi1.js";const St={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const Et=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,Et as __namedExportsOrder,St as default};
