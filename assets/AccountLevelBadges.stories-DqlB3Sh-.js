import{g as f}from"./userProfileHandlers-BDtgCZ4C.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-Bw0m6uSf.js";import{A}from"./AccountLevelBadges-gU9LsAGi.js";import"./VerificationSubmission-BDh1zA9f.js";import"./index-DlqiY1eh.js";import"./iframe-DqtJT-CI.js";import"./mockEntity-C_8KjBPq.js";import"./mockFileEntity-D5AYwyDU.js";import"./StringUtils-NPb0VexC.js";import"./mock_file_handle-BSSHlK6B.js";import"./mockProject-BxgzeyYg.js";import"./mockTeam-Dwytxbxs.js";import"./SynapseConstants-oxmSAhRt.js";import"./OrientationBanner-69jt1FeK.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-oGsaT5a9.js";import"./index-Bc8RXlNF.js";import"./spreadSx-CwcO6WA9.js";import"./react-CP1D827C.js";import"./FullWidthAlert-DA78l4ei.js";import"./Alert-CPCjYOjN.js";import"./createTheme-B-WGvCZV.js";import"./DefaultPropsProvider-BZTOi2Nb.js";import"./useSlot-BE5lb3ME.js";import"./useForkRef-2fHpQHUh.js";import"./createSimplePaletteValueFilter-B6DTm-vX.js";import"./createSvgIcon-C9Qu0LqJ.js";import"./Close-Bivu03FM.js";import"./IconButton-W3ZhFBsx.js";import"./useTimeout-DkJzioRi.js";import"./ButtonBase-D6Nhhqqr.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-BAgXRlg8.js";import"./Paper-BtBe2Ap-.js";import"./useTheme-CnLnUCUF.js";import"./useTheme-C9VVxehU.js";import"./Stack-1p_QX1Ok.js";import"./extendSxProp-eP26Hwbg.js";import"./getThemeProps-xXfwRdzB.js";import"./Box-nLN5geWp.js";import"./AlertTitle-BasMmQ31.js";import"./Typography-D9diGUsI.js";import"./index-BIlcAsR4.js";import"./ClickAwayListener-DtQh59tZ.js";import"./getReactElementRef-DBTURC4m.js";import"./index-CcY_nMfh.js";import"./index-DgNGjvVA.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-C-w8O3Bv.js";import"./Tooltip-D5aOZOwW.js";import"./index-DgC7vvPA.js";import"./useControlled-kiYK4enm.js";import"./Popper-Ccwyg-S0.js";import"./Button-D1_V94c4.js";import"./uniqueId-COcc66q-.js";import"./toString-CPLPrYC1.js";import"./isArray-wgyLd2Dj.js";import"./isSymbol-Bz_nq2Xo.js";import"./times-BUzBHwrf.js";import"./_Uint8Array-C2g0Y_T2.js";import"./identity-DKeuBCMA.js";import"./toInteger-DDu9OOBP.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-GKDTA9Sk.js";import"./QueryClientProvider-DmkRpa3F.js";import"./Link-Bxi0rxja.js";import"./Collapse-CMSd_lTh.js";import"./_baseUniq-6J9_uk5v.js";import"./_getTag-kNCA-Zxv.js";import"./isEqual-C1mFG84L.js";import"./merge-DJGXnCrn.js";import"./_initCloneObject-BMdnylxl.js";import"./tinycolor-Begke6kS.js";import"./Fade-Iv3fPh82.js";import"./inputBaseClasses-rlpaGauL.js";import"./calculateFriendlyFileSize-H7_KPqe_.js";import"./CheckCircleTwoTone-D-sclXL9.js";import"./InfoTwoTone-C3IyF0V8.js";import"./useMutation-DlA1__c_.js";import"./dayjs.min-SKfPruAU.js";import"./chunk-AYJ5UCUI-Ds_dHHHb.js";import"./cloneDeep-DATH6_8s.js";import"./Skeleton-xuFa_deo.js";import"./AccountLevelBadge-CXp69Pz1.js";import"./Card-BgfO2wB2.js";import"./ConfirmationDialog-BjJJUuas.js";import"./DialogBase-CBSCkqy2.js";import"./Close-CGBrMF9R.js";import"./HelpPopover-WM-gkAm2.js";import"./MarkdownPopover-BFAUzOSy.js";import"./LightTooltip-D7Hf5C5J.js";import"./MarkdownSynapse-OPELaiAh.js";import"./SkeletonButton-DeljvfTk.js";import"./SkeletonInlineBlock-CmTeqA9J.js";import"./SkeletonTable-BgDKh0q7.js";import"./SkeletonParagraph-CIvCOmc3.js";import"./HelpOutlineTwoTone-BKsnjMpo.js";import"./DialogTitle-Daa4s-on.js";import"./DialogContent-D5cb3mON.js";import"./Dialog-BM0-8K0P.js";import"./Modal-B9SONvRu.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-DhfOSFs9.js";import"./LoadingScreen-EOKGbwe5.js";import"./LinearProgress-D_rMTNyK.js";import"./ToastMessage-DhQvQaIM.js";import"./CSSTransition-CWaQpedD.js";const Rt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const St=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,St as __namedExportsOrder,Rt as default};
