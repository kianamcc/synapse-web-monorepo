import{j as l}from"./jsx-runtime-mncHC85H.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-BI5WaB2N.js";import{g as T}from"./handlers-ElSg_oHe.js";import{aD as S,M as a}from"./useFiles-DqScRbt4.js";import"./OrientationBanner-CPs8NG4k.js";import"./index-CsTX3kP9.js";import"./StringUtils-DN6u4g4A.js";import{l as _}from"./index-PXDpxRR5.js";import{S as E}from"./SynapseFormSubmissionGrid-BtkGfWQR.js";import"./mockSchema-kmzkY71_.js";import"./mockFileEntity-Di8UfuWh.js";import"./mock_file_handle-CFTRkxcS.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-DW6GiXhX.js";import"./mockTeam-BYgwEU7z.js";import"./SynapseConstants-D08trsQl.js";import"./uniqueId-m4Te-jrO.js";import"./toString-DTYmW4HR.js";import"./isObjectLike-CEcF5soC.js";import"./iframe-DLSVzvXo.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-BIDbKf_X.js";import"./times-Dc0h0Ng9.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-DrRjFvYa.js";import"./asyncJobHandlers-Cn5IfWqD.js";import"./BasicMockedCrudService-cdaT8skU.js";import"./cloneDeep-DZIutRQE.js";import"./_Uint8Array-CQNSJw1K.js";import"./_initCloneObject-5GhKEBQ1.js";import"./_getTag-Cu4vVg67.js";import"./isEqual-CkUvDbsf.js";import"./_baseIsEqual-DzelOY-I.js";import"./mockAnnotationColumns-CDY_Kq6K.js";import"./tableQueryHandlers-CKNIu63H.js";import"./omit-fWVWZNCt.js";import"./_baseGet-CQanjnEc.js";import"./isNil-DJjzYbv0.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-CWQX_ITa.js";import"./_baseFlatten-jiHl53sK.js";import"./pick-BwYoz7Ef.js";import"./_baseSet-BT8yqmQ4.js";import"./hasIn-J26xRGMF.js";import"./accessRequirementAclHandlers-G1SOoYd-.js";import"./mockAccessRequirementAcls-DWdVOjpS.js";import"./mockAccessRequirements-DZF1mC9R.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-CgjxDh2Q.js";import"./accessRequirementHandlers-Ec7BdbSj.js";import"./wikiHandlers-9KqZ2pMU.js";import"./mockWikiPageKey-CpWaySxn.js";import"./teamHandlers-CBAGiYLK.js";import"./dataAccessRequestHandlers-MEBP8VBn.js";import"./MockResearchProject-DrVOflac.js";import"./mock_discussion-DjQtyuqw.js";import"./fakerUtils-CTzWO-Hp.js";import"./index-D5LpucY0.js";import"./mockTableEntity-Ls7g1Mt0.js";import"./mockFileEntityACLVariants-CN9i98Fz.js";import"./entityHandlers-DUVA1EV_.js";import"./mockEntity-Bmero52O.js";import"./mockEvaluationQueue-_IbqLE9C.js";import"./featureFlagHandlers-I3stWFTh.js";import"./fileHandlers-CzSlGRLs.js";import"./personalAccessTokenHandlers-DPmjs854.js";import"./researchProjectHandlers-BeOTJiWO.js";import"./resetTwoFactorAuthHandlers-uXpp9XVr.js";import"./userProfileHandlers-kEQs3ZHS.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-C1ALFrRo.js";import"./FullWidthAlert-DYV97sSa.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-B2_TAMcq.js";import"./createTheme-8oXdyOSc.js";import"./resolveComponentProps-BDiE_oRR.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-MEzgZgYk.js";import"./createSvgIcon-CeFLfWhD.js";import"./DefaultPropsProvider-ieyM3ydX.js";import"./Close-kFL90S5e.js";import"./IconButton-BM4Jn5am.js";import"./ButtonBase-ByiL9H0e.js";import"./useTimeout-BtJRCvqS.js";import"./useIsFocusVisible-9CtOeZhj.js";import"./useEventCallback-CdglzKk7.js";import"./Paper-C5HeejQc.js";import"./Stack-D6CPYZyT.js";import"./getThemeProps-BJDZbo09.js";import"./useTheme-B2D66EuQ.js";import"./Box-Bl_FCMA-.js";import"./AlertTitle-CgJ0X8Ke.js";import"./Typography-CEXejR91.js";import"./useTheme-ppVJRK4K.js";import"./Grow-CnvDqgCY.js";import"./index-BEdEs92y.js";import"./utils-rI1xhfgE.js";import"./ClickAwayListener-PLDICXE-.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-BmrzSuCJ.js";import"./index-DBN6CKfD.js";import"./useControlled-LQMryYpP.js";import"./useId-DB4ytVRQ.js";import"./Popper-DP4Hazya.js";import"./Button-e17qQd72.js";import"./useQuery-BSxb1W-L.js";import"./utils-DGnta-Dt.js";import"./Link-nyIHYmpZ.js";import"./Collapse-Dh060KKb.js";import"./tinycolor-Begke6kS.js";import"./Fade-0dVaFb0e.js";import"./Skeleton-DQA5MqtH.js";import"./inputBaseClasses-DhdwnRrM.js";import"./calculateFriendlyFileSize-O7lp0Tvc.js";import"./CheckCircleTwoTone-czsrdd7S.js";import"./InfoTwoTone-TgkinIc6.js";import"./mutation-gLD3au5E.js";import"./dayjs.min-Xq55AiAZ.js";import"./chunk-AYJ5UCUI-DSl5zc7X.js";import"./index-BWDtDZnU.js";import"./react-C7TYIDWj.js";import"./util-DldtG0EP.js";import"./WideButton-CJubFMCE.js";import"./DeleteTwoTone-f9rmoOVR.js";import"./createSvgIcon-DIvQhW76.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-BDuk-rfZ.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-DQrc2dq7.js";import"./DialogBase-lgDxiDSA.js";import"./Close-Bgke01j-.js";import"./HelpPopover-fRuiPl3X.js";import"./MarkdownPopover-BSv9Ts6j.js";import"./LightTooltip-0BbNsUnU.js";import"./MarkdownSynapse-zRiVY5Cq.js";import"./useMutation-Bs4MQWD8.js";import"./SkeletonButton-CeFjb05B.js";import"./SkeletonInlineBlock-Bvtz7ozV.js";import"./SkeletonTable-CwfIIIRx.js";import"./SkeletonParagraph-mdtGW4O1.js";import"./HelpOutlineTwoTone-B2cr1QVf.js";import"./DialogTitle-BHy7-w1P.js";import"./DialogContent-CFLU_NJO.js";import"./Dialog-B_V5NWBv.js";import"./Modal-CalmGrFF.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-Cn5-itpm.js";import"./WarningDialog-D35BwmgR.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},To={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const _o=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,_o as __namedExportsOrder,To as default};
