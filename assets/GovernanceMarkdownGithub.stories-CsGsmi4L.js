import{u as o}from"./VerificationSubmission-BDh1zA9f.js";import{g as u,bd as d,be as l,B as f,bf as S,M as O}from"./useFiles-DsV7Uqwg.js";import"./StringUtils-C95LMFI-.js";import{h as i,H as n}from"./index-_oJM0qQX.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-Dm2-QvjD.js";import"./SynapseConstants-DL5YhH4S.js";import"./OrientationBanner-mORNTher.js";import"./index-CP2flBOM.js";import"./index-iHqCGgSD.js";import"./iframe-B7lNEjCA.js";import"./spreadSx-CwcO6WA9.js";import"./react-C8gp6qo_.js";import"./FullWidthAlert-hDDl8tGl.js";import"./Alert-Blqd_fNk.js";import"./createTheme-DVjZoLcM.js";import"./DefaultPropsProvider-Cyw12EVv.js";import"./useSlot-Co92EhaQ.js";import"./useForkRef-QOk-agIc.js";import"./createSimplePaletteValueFilter-BiBnMtNg.js";import"./createSvgIcon-zcikS4QR.js";import"./Close-DTFq5PlQ.js";import"./IconButton-MRX9Tl10.js";import"./useTimeout-BDErO9dO.js";import"./ButtonBase-CpibtBKw.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-CSoU-aEZ.js";import"./Paper-l2vU89bV.js";import"./useTheme-DdAf-Ccq.js";import"./useTheme-BpTHkjke.js";import"./Stack-D4AYLr5g.js";import"./useThemeProps-BtqvP0WI.js";import"./getThemeProps-D1SG0DsT.js";import"./extendSxProp-C7d5w1mF.js";import"./Box-CDAuR3Sa.js";import"./AlertTitle-DxXMQd8X.js";import"./Typography-DBnwRkQ7.js";import"./index--3ZaasC4.js";import"./ClickAwayListener-DrGahT-8.js";import"./getReactElementRef-Deaobhwy.js";import"./index-CuVSgrUP.js";import"./index-BqdGDFpd.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-D_bI5i2G.js";import"./Tooltip-lUCmHMJ3.js";import"./index-Do8mbRFX.js";import"./useControlled-CTTwHfL4.js";import"./Popper-DbiyN3lk.js";import"./Button-D1Zc7cY5.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-DQoxcdop.js";import"./QueryClientProvider-DZo2I7_f.js";import"./Link-8oHfVMM1.js";import"./Collapse-PeaT3Cz9.js";import"./_baseUniq-BioGUUFG.js";import"./_Uint8Array-4Fua8vo1.js";import"./isArray-BVc5tk0h.js";import"./_getTag-DMNH3Rat.js";import"./isEqual-DVzAcMpg.js";import"./noop-DX6rZLP_.js";import"./merge-DN43w6rZ.js";import"./_initCloneObject-D074hTky.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-BrjpvEaI.js";import"./inputBaseClasses-CZKuk046.js";import"./calculateFriendlyFileSize-ChX25_t7.js";import"./CheckCircleTwoTone-Ck5csnvz.js";import"./InfoTwoTone-C4STztOF.js";import"./useMutation-BNmK4RdG.js";import"./dayjs.min-4LP4YV8J.js";import"./chunk-AYJ5UCUI-C7xelVKS.js";import"./cloneDeep-C13AQJD-.js";import"./Skeleton-BOqcwHCi.js";import"./SkeletonButton-BF5SBREW.js";import"./SkeletonInlineBlock-JMyIX4aF.js";import"./SkeletonTable-qfkj7msZ.js";import"./times-C2V6Ker1.js";import"./toInteger-T3Rot4a2.js";import"./isSymbol-DxIswJ5e.js";import"./SkeletonParagraph-DiUeZz7j.js";import"./MarkdownSynapse-DNhl0cBY.js";import"./Container-BMxGG3j0.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(f.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=S(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Qr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const Xr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,Xr as __namedExportsOrder,Qr as default};
